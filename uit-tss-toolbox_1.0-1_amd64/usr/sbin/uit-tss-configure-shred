#!/bin/bash

if [ ! -f /opt/live-build.deb ]; then
/usr/bin/apt purge live-build -y
/usr/bin/wget http://ftp.us.debian.org/debian/pool/main/l/live-build/live-build_20220505_all.deb \
	--output-document=/opt/debian-live.deb
/usr/bin/apt install /opt/debian-live.deb -y
fi

/usr/bin/apt install dosfstools -y

rm -r /opt/UIT-TSS-SHRED/
mkdir /opt/UIT-TSS-SHRED/

( cd /opt/UIT-TSS-SHRED/ && \

	lb clean && \

	/usr/bin/lb config \
		--apt apt \
		--apt-recommends true \
		--apt-secure true \
		--apt-source-archives true \
		--architecture amd64 \
		--archive-areas 'main' \
		--binary-filesystem fat32 \
		--binary-images iso-hybrid \
		--bootappend-live "boot=live live-media=removable toram username=root hostname=UIT-TSS-SHRED \
			timezone=America/Chicago" \
		--bootloaders "grub-efi syslinux" \
		--chroot-filesystem squashfs \
		--compression gzip \
		--clean \
		--debian-installer live \
		--debian-installer-distribution bullseye \
		--distribution bullseye \
		--debootstrap-options "--variant=minbase --arch=amd64" \
		--hdd-label UIT-TSS-SHRED \
		--image-name UIT-TSS-SHRED \
		--initramfs live-boot \
		--initsystem systemd \
		--iso-application UIT-TSS-SHRED \
		--iso-preparer "Cameron Raschke caraschke@uh.edu" \
		--iso-publisher "Cameron Raschke caraschke@uh.edu" \
		--iso-volume UIT-TSS-SHRED \
		--mode debian \
		--system live \
		--uefi-secure-boot enable \
		--updates true)

mkdir -p /opt/UIT-TSS-SHRED/config/bootloaders
cp -r /usr/share/live/build/bootloaders/isolinux /opt/UIT-TSS-SHRED/config/bootloaders
cp -r /usr/share/live/build/bootloaders/grub-pc /opt/UIT-TSS-SHRED/config/bootloaders

cat <<'EOF' > /opt/UIT-TSS-SHRED/config/bootloaders/isolinux/isolinux.cfg
UI vesamenu.c32

MENU TITLE Boot Menu
DEFAULT linux
        TIMEOUT 0
        MENU RESOLUTION 640 480
        SAY Now booting into UIT-TSS-SHRED by Cameron Raschke
label linux
        menu label UIT-TSS-SHRED by Cameron Raschke
        menu default
        linux /live/vmlinuz
        initrd /live/initrd.img
        append @APPEND_LIVE@
EOF

rm -r /opt/UIT-TSS-SHRED/config/bootloaders/grub-pc/*
cat <<'EOF' > /opt/UIT-TSS-SHRED/config/bootloaders/grub-pc/grub.cfg
insmod part_gpt
insmod part_msdos
insmod fat
insmod iso9660
insmod gfxterm

set gfxmode=800x600
terminal_output gfxterm

set default="0"
set timeout=0
set timeout_style=hidden

menuentry "UIT-TSS-SHRED by Cameron Raschke" {
        linux @KERNEL_LIVE@ @APPEND_LIVE@
        initrd @INITRD_LIVE@
}
EOF

cat <<'EOF' > /opt/UIT-TSS-SHRED/config/package-lists/live.list.chroot
live-boot
live-config
live-config-systemd
systemd-sysv
openssl
less
nano
vim
cifs-utils
passwd
locales
firmware-linux-free
parted
gdisk
libasound2
libasound2-plugins
alsa-utils
sox
libsox-fmt-all
kbd
iptables
hdparm
util-linux
nvme-cli
procps
EOF

mkdir -p /opt/UIT-TSS-SHRED/config/includes.chroot/root/
cat <<'EOF' > /opt/UIT-TSS-SHRED/config/hooks/live/0100-uit-tss-toolbox-setup.hook.chroot

/usr/sbin/sysctl -w "net.ipv6.conf.all.disable_ipv6=1" &>/dev/null
/usr/sbin/sysctl -w "net.ipv6.conf.default.disable_ipv6=1" &>/dev/null
/usr/sbin/sysctl -w "net.ipv4.conf.default.rp_filter=2" &>/dev/null
/usr/sbin/sysctl -w "net.ipv4.conf.all.rp_filter=2" &>/dev/null
/usr/sbin/sysctl -w "net.ipv4.ip_forward=0" &>/dev/null
/usr/sbin/sysctl -w "net.ipv6.conf.all.forwarding=1" &>/dev/null
/usr/sbin/sysctl -w  "net.ipv6.conf.default.forwarding=1" &>/dev/null
/usr/sbin/sysctl -p &>/dev/null

/usr/sbin/sysctl -w "kernel.printk=2 4 1 2" &>/dev/null
/usr/sbin/sysctl -w "kernel.kptr_restrict=1" &>/dev/null
/usr/sbin/sysctl -w "vm.mmap_min_addr=65536" &>/dev/null
/usr/sbin/sysctl -p &>/dev/null

echo "UIT-TSS-SHRED" > /etc/hostname
echo -e "\nWelcome to UIT-TSS-SHRED by Cameron Raschke.\n" > /etc/motd
echo -e "\nWelcome to UIT-TSS-SHRED by Cameron Raschke.\n" > /etc/issue.net
echo -e "Banner /etc/issue.net" >> /etc/ssh/sshd_config

/usr/bin/apt purge iproute2 -y &>/dev/null
EOF

chmod 777 /opt/UIT-TSS-SHRED/config/hooks/live/0100-uit-tss-toolbox-setup.hook.chroot

mkdir -p /opt/UIT-TSS-SHRED/config/includes.chroot/root/
/usr/bin/wget https://soundboardguy.com/wp-content/uploads/2022/01/Oven-Timer-Ding.mp3 \
	--output-document=/opt/UIT-TSS-SHRED/config/includes.chroot/root/oven.mp3

mkdir -p /opt/UIT-TSS-SHRED/config/includes.chroot/root
touch /opt/UIT-TSS-SHRED/config/includes.chroot/root/.bash_profile
cat <<'EOF' > /opt/UIT-TSS-SHRED/config/includes.chroot/root/.bash_profile
#!/bin/bash

clear

echo ""
echo "Configuring Kernel..."
/usr/sbin/iptables -P INPUT DROP &>/dev/null
/usr/sbin/iptables -P FORWARD DROP &>/dev/null
/usr/sbin/iptables -P OUTPUT DROP &>/dev/null
/usr/sbin/sysctl -w "net.ipv6.conf.all.disable_ipv6=1" &>/dev/null
/usr/sbin/sysctl -w "net.ipv6.conf.default.disable_ipv6=1" &>/dev/null
/usr/sbin/sysctl -w "net.ipv4.conf.default.rp_filter=2" &>/dev/null
/usr/sbin/sysctl -w "net.ipv4.conf.all.rp_filter=2" &>/dev/null
/usr/sbin/sysctl -w "net.ipv4.ip_forward=0" &>/dev/null
/usr/sbin/sysctl -w "net.ipv6.conf.all.forwarding=1" &>/dev/null
/usr/sbin/sysctl -w  "net.ipv6.conf.default.forwarding=1" &>/dev/null
/usr/sbin/sysctl -w "kernel.printk=2 4 1 2" &>/dev/null
/usr/sbin/sysctl -w "kernel.kptr_restrict=1" &>/dev/null
/usr/sbin/sysctl -w "vm.mmap_min_addr=65536" &>/dev/null
/usr/sbin/sysctl -p &>/dev/null
echo "Done."
echo ""
 
echo "Configuring audio..."
/usr/bin/amixer sset Master 100% &>/dev/null
/usr/bin/amixer set Master unmute &>/dev/null
/usr/bin/amixer sset Speakers 100% &>/dev/null
/usr/sbin/amixer set Speakers unmute &>/dev/null
echo "Done."
echo ""

echo "Configuring font..."
/usr/bin/setfont /usr/share/consolefonts/Lat7-TerminusBold16.psf.gz
echo "Done."
echo ""

sleep 1

clear

CLIENTDISK=''

function intro {
	clear
	echo ""
	echo -e "\nWelcome to UIT-TSS-SHRED by Cameron Raschke.\n"
	echo "Press CTRL + C at any time to exit"
	echo "If you have exited and want to restart UIT-TSS-SHRED, press CTRL + D"
	echo ""
	echo ""
echo '
| |    | |  | |     | |
| |    | |  | |_____| |
| |    | |  | |_____| |
| |____| |  | |     | |
\________/  | |     | |
'
	sleep 1
	echo ""
	echo "------------------------------"
	echo ""
echo 'Checklist:
	-Physical connections
	   * Make sure that power is plugged in to the client.
	-General best practices
	   * Sanitize laptops with cleaner before imaging them.
	   * Reset BIOS to default/factory settings before imaging.
	-Dells
	   * Make sure SATA mode is in AHCI mode and not RAID mode.
	      * This is usually under "System Configuration" or "Storage" in BIOS.
	      * Every Dell is in RAID mode by default. 
	      * If you reset BIOS, make sure you change SATA mode after the reset.
	      
	*** WARNING *** After pressing Enter, the system will enter hibernate mode.
	This is normal. Please wake up the system by pressing the Space key.
	If that does not work, then press the Power key once. *** WARNING ***
'
	read -p "Please remove the thumb drive and press Enter...."
	echo -n mem > /sys/power/state
	clear
}

function diskselect {
	DISKNAMES=$(lsblk --nodeps --noheadings -o NAME --exclude 1,2,7,11)
	echo ""
    echo "These are the current disks and their sizes:"
    echo "${DISKNAMES}"
    echo ""
    echo "Which disk do you want to ${ACTION}?"
    PS3="Select a drive: "
    select CLIENTDISK in ${DISKNAMES}
    do
        if [[ $CLIENTDISK =~ sd.* || $CLIENTDISK =~ nvme.* ]]; then
        echo "$(lsblk /dev/${CLIENTDISK} -o NAME,SIZE,TYPE,MOUNTPOINT)"
        echo "You chose ${CLIENTDISK}. Is this correct?"
        read -p "Press Enter to confirm...."
        echo ""
        break
        else
		echo "Invalid block device selected."
		echo ""
		diskselect
        exit 1
        fi
    done
}

function execute {
	SSD_REGEX='sd.*'
	NVME_REGEX='nvme.*'
	start_time=$SECONDS
	clear
	echo ""
	echo "Destroying all GPT and MBR data...."
	/usr/sbin/sgdisk --zap-all /dev/${CLIENTDISK} &>/dev/null
	echo ""
	echo "Shredding disk ${CLIENTDISK}...."
	sleep 1
	/usr/bin/shred -v -n 2 /dev/${CLIENTDISK}
	
	if [[ $CLIENTDISK =~ $SSD_REGEX ]]; then 
	echo ""
	echo "Cryptographically deleting ${CLIENTDISK} at a firmware level. Please keep the device powered on."
	sleep 1
	/usr/sbin/hdparm --user-master u --security-set-pass UHouston /dev/${CLIENTDISK} &>/dev/null
	/usr/sbin/hdparm --user-master u --security-erase UHouston /dev/${CLIENTDISK} &>/dev/null
	fi
	
	if [[ $CLIENTDISK =~ $NVME_REGEX ]]; then
	echo ""
	echo "Deleting ${CLIENTDISK} at a firmware level. Please keep the device powered on."
	sleep 1
	/usr/sbin/nvme format /dev/${CLIENTDISK} --ses=1 --namespace-id=1 &>/dev/null
	echo ""
	echo "Cryptographically deleting ${CLIENTDISK}. Please keep the device powered on."
	sleep 1
	/usr/sbin/nvme format /dev/${CLIENTDISK} --ses=2 --namespace-id=1 &>/dev/null
	fi
	
	echo ""
	echo "Overwriting and zeroing ${CLIENTDISK} one last time...."
	sleep 1
	/usr/bin/shred -vz -n 1 /dev/${CLIENTDISK}
	echo ""
	echo "Discarding all sectors."
	sleep 1
	/usr/sbin/blkdiscard /dev/${CLIENTDISK} &>/dev/null
}

function terminate {
	elapsed=$(( SECONDS - start_time ))
	TIME=$(date -d@$elapsed -u +'%H hours and %M minutes')
	echo ""
	echo ""
	echo ""
	echo "Done."
	echo -e ""
	elapsed=''
	echo ""
	/usr/bin/play /root/oven.mp3 &> /dev/null
	echo "Process has finished in ${TIME}."
	read -p "Press Enter to shutdown..."
	poweroff
}

intro
diskselect
execute
terminate
EOF

(cd /opt/UIT-TSS-SHRED && \
	lb build)
