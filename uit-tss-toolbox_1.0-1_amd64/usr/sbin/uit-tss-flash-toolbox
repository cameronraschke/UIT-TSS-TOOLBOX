#!/bin/bash

SSD_REGEX='sd.*'
NVME_REGEX='nvme.*'
SCSI_REGEX='hd.*'
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
BLUE=$(tput setaf 4)
BOLD=$(tput bold)
DIM=$(tput dim)
RESET=$(tput sgr0)
cloneElapsed="0"
shredElapsed="0"
ACTION="burn an ISO to"

if [[ ! -f /opt/UIT-TSS-TOOLBOX/UIT-TSS-TOOLBOX-amd64.hybrid.iso ]]; then
        echo ""
        echo "${BOLD}${RED}ISO file does not exist. Please run uit-tss-configure-toolbox.${RESET}"
fi

function diskSelect {
    DISKNAMES=$(for i in /sys/block/*;
        do if udevadm info --query=property --path=${i} | grep -q ^ID_BUS=usb;
        then i=$(echo ${i} | grep -o 'sd.*');
        echo ${i}; fi; done)
	DISKSIZES=$(lsblk --nodeps --noheadings -o NAME,SIZE --exclude 1,2,7,11)
        CLIENTDISK=""
	diskNums="0"
	local DISKCONF=""
	local a="0"
	local n="0"
	local DISKARR=()

	for i in ${DISKNAMES}; do
		diskNums=$(( DISKNAMES + 1 ))
		DISKARR+=( "$i" )
	done

	if [[ $diskNums == "1" ]]; then
		for i in ${!DISKARR[@]}; do
			CLIENTDISK=${DISKARR[$i]}
		done
		echo "The disk ${BOLD}${CLIENTDISK}${RESET} has been automatically selected because it is the only detected disk."
		read -n 1 -p "Press ${BOLD}${BLUE}[1]${RESET} to confirm" DISKCONF
		if [[ $DISKCONF != "1" ]]; then
			echo "${BOLD}${RED}Reselecting disk.${RESET}"
			diskSelect
		fi
	else
		echo "Which disk do you want to flash?"
		while read -r line; do
			a=$(( $a + 1 ))
			echo "${BOLD}${BLUE}[${a}]${RESET} $line"
		done < <(echo "${BOLD}${DISKSIZES}${RESET}")
		echo ""
		read -n 1 -p "Select a disk ${BOLD}${BLUE}[1-$a]${RESET}: " CLIENTDISK
		for i in ${!DISKARR[@]}; do
			n=$(( $n + 1 ))
			if [[ $n == $CLIENTDISK ]]; then
				CLIENTDISK=${DISKARR[$i]}
			fi
		done
		echo ""
		echo ""
	fi
}

function execute {
        if [[ ! -z $ISODISK && -z $CLIENTDISK && $DISKCHECK =~ sd.* ]]; then
                echo "Unmounting ${CLIENTDISK}"
                umount /dev/${CLIENTDISK} &>/dev/null
                echo "Making FAT filesystem on ${CLIENTDISK}"
                mkfs.vfat -I -F 32 /dev/${CLIENTDISK} &>/dev/null
                echo "Writing ISO to ${CLIENTDISK}, this may take a while..."
                /usr/bin/pv < /opt/UIT-TSS-TOOLBOX/UIT-TSS-TOOLBOX-amd64.hybrid.iso > /dev/${CLIENTDISK}
                echo "Creating new label on disk ${CLIENTDISK}: UITTOOLBX"
                fatlabel /dev/${CLIENTDISK} "UITTOOLBX" &>/dev/null
                fatlabel /dev/${CLIENTDISK}1 "UITTOOLBX" &>/dev/null
        else
                echo ""
                echo "Invalid block device or no USB drive found. Exiting...."
                exit 1
        fi
}

diskSelect
execute