#!/bin/bash

if [ ! -f /opt/live-build.deb ]; then
/usr/bin/apt purge live-build -y
/usr/bin/wget http://ftp.us.debian.org/debian/pool/main/l/live-build/live-build_20220505_all.deb \
	--output-document=/opt/debian-live.deb
/usr/bin/apt install /opt/debian-live.deb -y
fi

/usr/bin/apt install dosfstools -y

rm -r /opt/UIT-TSS-CLONE/
mkdir /opt/UIT-TSS-CLONE/

( cd /opt/UIT-TSS-CLONE/ && \

	lb clean && \

	/usr/bin/lb config \
		--apt apt \
		--apt-recommends true \
		--apt-secure true \
		--apt-source-archives true \
		--architecture amd64 \
		--archive-areas 'main' \
		--binary-filesystem fat32 \
		--binary-images iso-hybrid \
		--bootappend-live "boot=live live-media=removable toram username=root hostname=UIT-TSS-CLONE \
			timezone=America/Chicago locales=en_US.UTF-8" \
		--bootloaders "grub-efi syslinux" \
		--chroot-filesystem squashfs \
		--compression gzip \
		--clean \
		--debian-installer live \
		--debian-installer-distribution bullseye \
		--distribution bullseye \
		--debootstrap-options "--variant=minbase --arch=amd64" \
		--hdd-label UIT-TSS-CLONE \
		--image-name UIT-TSS-CLONE \
		--initramfs live-boot \
		--initsystem systemd \
		--iso-application UIT-TSS-CLONE \
		--iso-preparer "Cameron Raschke caraschke@uh.edu" \
		--iso-publisher "Cameron Raschke caraschke@uh.edu" \
		--iso-volume UIT-TSS-CLONE \
		--mode debian \
		--system live \
		--uefi-secure-boot enable \
		--updates true)

mkdir -p /opt/UIT-TSS-CLONE/config/bootloaders
cp -r /usr/share/live/build/bootloaders/isolinux /opt/UIT-TSS-CLONE/config/bootloaders
cp -r /usr/share/live/build/bootloaders/grub-pc /opt/UIT-TSS-CLONE/config/bootloaders
rm -r /opt/UIT-TSS-CLONE/config/bootloaders/grub-pc/*

cat <<'EOF' > /opt/UIT-TSS-CLONE/config/bootloaders/isolinux/isolinux.cfg
UI vesamenu.c32

MENU TITLE Boot Menu
DEFAULT linux
        TIMEOUT 10
        MENU RESOLUTION 640 480
        SAY Now booting into UIT-TSS-CLONE by Cameron Raschke
label linux
        menu label UIT-TSS-CLONE by Cameron Raschke
        menu default
        linux /live/vmlinuz
        initrd /live/initrd.img
        append @APPEND_LIVE@
EOF

cat <<'EOF' > /opt/UIT-TSS-CLONE/config/bootloaders/grub-pc/grub.cfg
insmod part_gpt
insmod part_msdos
insmod fat
insmod iso9660
insmod gfxterm

set gfxmode=800x600
terminal_output gfxterm

set default="0"
set timeout=0
set timeout_style=hidden

menuentry "UIT-TSS-CLONE by Cameron Raschke" {
        linux @KERNEL_LIVE@ @APPEND_LIVE@
        initrd @INITRD_LIVE@
}
EOF

cat <<'EOF' > /opt/UIT-TSS-CLONE/config/package-lists/live.list.chroot
live-boot
live-config
live-config-systemd
systemd-sysv
network-manager
openssl
less
iproute2
curl
wget
openssh-client
nano
vim
clonezilla
cifs-utils
passwd
locales
firmware-linux-free
apt-utils
parted
partclone
partimage
gparted
ethtool
isc-dhcp-client
net-tools
gzip
lzip
zstd
sudo
chntpw
libasound2
libasound2-plugins
alsa-utils
sox
libsox-fmt-all
ca-certificates
sshpass
kbd
procps
dosfstools
efibootmgr
efivar
ntfs-3g
EOF

mkdir -p /opt/UIT-TSS-CLONE/config/includes.chroot/root/
cat <<'EOF' > /opt/UIT-TSS-CLONE/config/hooks/live/0100-uit-tss-toolbox-setup.hook.chroot

touch /root/.ssh_passwd
echo "UHouston!" > /root/.ssh_passwd
chown root:root /root/.ssh_passwd
chmod 600 /root/.ssh_passwd

/usr/sbin/sysctl -w "net.ipv6.conf.all.disable_ipv6=1"
/usr/sbin/sysctl -w "net.ipv6.conf.default.disable_ipv6=1"
/usr/sbin/sysctl -w "net.ipv4.conf.default.rp_filter=2"
/usr/sbin/sysctl -w "net.ipv4.conf.all.rp_filter=2"
/usr/sbin/sysctl -w "net.ipv4.ip_forward=0"
/usr/sbin/sysctl -w "net.ipv6.conf.all.forwarding=1"
/usr/sbin/sysctl -w  "net.ipv6.conf.default.forwarding=1"
/usr/sbin/sysctl -p

/usr/sbin/sysctl -w "kernel.printk=2 4 1 2"
/usr/sbin/sysctl -w "kernel.kptr_restrict=1"
/usr/sbin/sysctl -w "vm.mmap_min_addr=65536"
/usr/sbin/sysctl -p

echo "uit-tss-clone.cameronraschke.com" > /etc/hostname
echo -e "\nWelcome to UIT-TSS-CLONE by Cameron Raschke.\n" > /etc/motd
echo -e "\nWelcome to UIT-TSS-CLONE by Cameron Raschke.\n" > /etc/issue.net
echo -e "Banner /etc/issue.net" >> /etc/ssh/sshd_config
EOF

chmod 777 /opt/UIT-TSS-CLONE/config/hooks/live/0100-uit-tss-toolbox-setup.hook.chroot

mkdir -p /opt/UIT-TSS-CLONE/config/includes.chroot/root/
wget https://soundboardguy.com/wp-content/uploads/2022/01/Oven-Timer-Ding.mp3 \
	--output-document=/opt/UIT-TSS-CLONE/config/includes.chroot/root/oven.mp3

chmod 755 /opt/UIT-TSS-CLONE/config/includes.chroot/root/clone-script.sh

cat <<'EOF' > /opt/UIT-TSS-CLONE/config/includes.chroot/root/.bash_profile
#!/bin/bash

clear
echo ""
echo -e "Welcome to UIT-TSS-TOOLBOX by Cameron Raschke."
echo ""

echo ""
echo "Configurating Kernel..."
sysctl -w "kernel.printk=2 4 1 2"
sysctl -w "kernel.kptr_restrict=1"
sysctl -w "vm.mmap_min_addr=65536"
sysctl -p
modprobe efivars
echo "Done."

echo ""
echo "Configuring networking..."
sysctl -w "net.ipv6.conf.all.disable_ipv6=1"
sysctl -w "net.ipv6.conf.default.disable_ipv6=1"
sysctl -w "net.ipv4.conf.default.rp_filter=2"
sysctl -w "net.ipv4.conf.all.rp_filter=2"
sysctl -w "net.ipv4.ip_forward=0"
sysctl -w "net.ipv6.conf.all.forwarding=1"
sysctl -w "net.ipv6.conf.default.forwarding=1"
sysctl -p

local a="0"
local b="1"
for i in $(nmcli -t -f DEVICE device | grep '^e.*'); do
nmcli connection modify "${i}" connection.interface-name "eth${a}" connection.id "Wired connection ${b}"
nmcli connection modify "Wired connection ${b}" ipv4.method auto
nmcli connection modify "Wired connection ${b}" ipv6.method disabled
nmcli connection up "Wired connection ${b}"
a=$(( $a + 1 ))
b=$(( $b + 1 ))
done

nmcli radio wifi off

echo "Done."
echo ""

if [ ! -f /root/.ssh/id_rsa ]; then
	ssh-keygen -t rsa -b 4096 -f /root/.ssh/id_rsa -N ""
fi
sshpass -f /root/.ssh_passwd ssh-copy-id \
	-o "StrictHostKeyChecking=no" cameron@mickey.uit
scp cameron@mickey.uit:/home/cameron/clone-script.sh /home
chmod 755 /home/clone-script.sh
/home/clone-script.sh
EOF

(cd /opt/UIT-TSS-CLONE && \
	lb build)
