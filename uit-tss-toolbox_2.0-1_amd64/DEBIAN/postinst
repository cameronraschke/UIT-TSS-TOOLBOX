#!/bin/bash
if [[ ! -d /srv/uit-toolbox/client/src/ ]]; then
    mkdir -p /srv/uit-toolbox/client/src/
fi


if [[ ! -d /srv/uit-toolbox/client/pkg/ ]]; then
    mkdir -p /srv/uit-toolbox/client/pkg/
fi

if [[ ! -d /srv/uit-toolbox/client/iso/ ]]; then
    mkdir -p /srv/uit-toolbox/client/iso/
fi

if [[ ! -d /srv/nfs/uit-toolbox/images ]]; then
    mkdir -p /srv/nfs/uit-toolbox/images
fi

if [[ ! -d /opt/uit-toolbox/sql-backups ]]; then
  mkdir -p /opt/uit-toolbox/sql-backups
fi


# File replacements
# Insert include.php with modifications for the clients.
cat /var/www/html/uit-web/php/include.php | sed 's/localhost/10.0.0.1/g' | sed 's/uitweb/uitclient/g' > /srv/uit-toolbox/client/src/uit-toolbox-client_2.0-1_amd64/opt/uit-toolbox/include.php
sed --in-place 's/WEB_SVC_PASSWD/DB_CLIENT_PASSWD/g' /srv/uit-toolbox/client/src/uit-toolbox-client_2.0-1_amd64/opt/uit-toolbox/include.php


unset configArr
declare -A configArr

configArr[DB_ADMIN_PASSWD]=$(cat /etc/opt/uit-toolbox/server/conf.d/uit-toolbox.conf | grep '^DB_ADMIN_PASSWD=' | sed 's/DB_ADMIN_PASSWD=//g' | sed 's/[[:space:]]//g')
configArr[DB_CLIENT_PASSWD]=$(cat /etc/opt/uit-toolbox/server/conf.d/uit-toolbox.conf | grep '^DB_CLIENT_PASSWD=' | sed 's/DB_CLIENT_PASSWD=//g' | sed 's/[[:space:]]//g')
configArr[WEB_USER_DEFAULT_PASSWD]=$(cat /etc/opt/uit-toolbox/server/conf.d/uit-toolbox.conf | grep '^WEB_USER_DEFAULT_PASSWD=' | sed 's/WEB_USER_DEFAULT_PASSWD=//g' | sed 's/[[:space:]]//g')
configArr[WEBMASTER_NAME]=$(cat /etc/opt/uit-toolbox/server/conf.d/uit-toolbox.conf | grep '^WEBMASTER_NAME=' | sed 's/WEBMASTER_NAME=//g')
configArr[WEBMASTER_EMAIL]=$(cat /etc/opt/uit-toolbox/server/conf.d/uit-toolbox.conf | grep '^WEBMASTER_EMAIL=' | sed 's/WEBMASTER_EMAIL=//g' | sed 's/[[:space:]]//g')
configArr[WEB_USERS]=$(cat /etc/opt/uit-toolbox/server/conf.d/uit-toolbox.conf | grep '^WEB_USERS=' | sed 's/WEB_USERS=//g')
configArr[WAN_IF]=$(cat /etc/opt/uit-toolbox/server/conf.d/uit-toolbox.conf | grep '^WAN_IF=' | sed 's/WAN_IF=//g' | sed 's/[[:space:]]//g')
configArr[WAN_IP_ADDRESS]=$(cat /etc/opt/uit-toolbox/server/conf.d/uit-toolbox.conf | grep '^WAN_IP_ADDRESS=' | sed 's/WAN_IP_ADDRESS=//g' | sed 's/[[:space:]]//g')
configArr[LAN_IF]=$(cat /etc/opt/uit-toolbox/server/conf.d/uit-toolbox.conf | grep '^LAN_IF=' | sed 's/LAN_IF=//g' | sed 's/[[:space:]]//g')
configArr[LAN_IP_ADDRESS]=$(cat /etc/opt/uit-toolbox/server/conf.d/uit-toolbox.conf | grep '^LAN_IP_ADDRESS=' | sed 's/LAN_IP_ADDRESS=//g' | sed 's/[[:space:]]//g')
configArr[WAN_ALLOWED_IP]=$(cat /etc/opt/uit-toolbox/server/conf.d/uit-toolbox.conf | grep '^WAN_ALLOWED_IP=' | sed 's/WAN_ALLOWED_IP=//g')
configArr[LAN_ALLOWED_IP]=$(cat /etc/opt/uit-toolbox/server/conf.d/uit-toolbox.conf | grep '^LAN_ALLOWED_IP=' | sed 's/LAN_ALLOWED_IP=//g')
configArr[PRINTER_IP]=$(cat /etc/opt/uit-toolbox/server/conf.d/uit-toolbox.conf | grep '^PRINTER_IP=' | sed 's/PRINTER_IP=//g' | sed 's/[[:space:]]//g')
configArr[WEB_SVC_PASSWD]=$(openssl rand 30 | hexdump | tr -d '\n' | sed 's/[[:space:]]//g' | head -n1 | md5sum | awk '{print $1}' | sed 's/[[:space:]]//g')

function checkNullConfigVals() {
for checkVal in ${!configArr[@]}; do
  if [[ -z ${configArr[$checkVal]} ]]; then
    echo "[Error] Missing/NULL parameter ${checkVal} in /etc/opt/uit-toolbox/server/conf.d/uit-toolbox.conf"
    echo ""
    read -p "Value for ${checkVal} is missing. Continue? [y/N] " userInput
    if [[ -z $userInput || $userInput == "n" || $userInput == "N" ]]; then
      echo "Exiting..."
      exit 1
      elif [[ $userInput == "y" || $userInput == "Y" ]]; then
        :
      else checkNullConfigVals
    fi
  fi
done
}
checkNullConfigVals

for i in ${!configArr[@]}; do

  for file in $(find /usr/sbin/ -type f -name 'uit-*'; find /var/www/html/uit-web \( -path "/var/www/html/uit-web/transcode" -o  -path "/var/www/html/uit-web/images" \) -prune -o -type f -print; find /etc/dnsmasq.d/uit-dhcp.conf -type f ; find /srv/uit-toolbox/client/src/ -type f; find /etc/opt/uit-toolbox/server/conf.d/ -type f -name '*.cfg'; find /opt/uit-toolbox/api -type f -name *.go; find /etc/nginx/sites-enabled/ -type f; find /etc/chrony/conf.d/ -type f -name *.conf; find /etc/dnsmasq.d/ -type f -name *.conf); do
    if [[ -f $file ]]; then
      sanitizedValue=${configArr[$i]//\//\\/}
      sed --in-place "s/${i}/${sanitizedValue}/g" ${file}
      else
      echo "File ${file} does not exist. Exiting..."
      exit 1
    fi
  done


done

  # Update SQL tables & procedures
  echo "Updating SQL tables & procedures..."
  sudo -u postgres psql uitdb < /etc/opt/uit-toolbox/server/postgresql/postgresql-tables.sql
  sudo -u postgres psql uitdb < /etc/opt/uit-toolbox/server/postgresql/postgresql-procedures.sql

  ## Uncomment on first-time setup
  #sudo -u postgres psql --command="CREATE DATABASE uitdb;"
  #sudo -u postgres psql --command="CALL sqlCreateUsers();" uitdb
  sudo -u postgres psql --command="CALL sqlPermissions();" uitdb

  # Set passwords for various services
  echo "Updating SQL Passwords..."
  # PSQL
  echo "  --PSQL Passwords"
  # PostgreSQL Users
  sudo -u postgres psql --command="ALTER USER cameron WITH PASSWORD '${configArr[DB_ADMIN_PASSWD]}';"
  sudo -u postgres psql --command="ALTER USER uitclient WITH PASSWORD '${configArr[DB_CLIENT_PASSWD]}';"
  sudo -u postgres psql --command="ALTER USER uitweb WITH PASSWORD '${configArr[WEB_SVC_PASSWD]}';"


  echo "  --Website Passwords"
  sudo -u postgres psql --command="DELETE FROM logins;" uitdb
  for webUser in ${configArr[WEB_USERS]}; do
    sudo -u postgres psql --command="INSERT INTO logins (username, name, password) VALUES (${webUser},SHA256('${configArr[WEB_USER_DEFAULT_PASSWD]}'));" uitdb
  done
  sudo -u postgres psql --command="UPDATE logins SET username = SHA256(username);" uitdb


# Update SQL Permissions
echo "Updating PSQL Permissions..."
sudo -u postgres psql --command="CALL sqlPermissions();" uitdb


# File permissions
if [[ $(groups cameron | grep 'uit'; echo $?) == "1" ]]; then
  groupadd uit
  usermod --append --groups uit cameron
fi

/usr/bin/chmod 750 /usr/sbin/uit-*
/usr/bin/chown root:uit /usr/sbin/uit-*

/usr/bin/chmod 750 /etc/opt/uit-toolbox/server/conf.d
/usr/bin/chown root:root /etc/opt/uit-toolbox/server/conf.d -R

/usr/bin/chown root:uit /etc/opt/uit-toolbox/server/conf.d/ -R
/usr/bin/chmod 750 /etc/opt/uit-toolbox/server/conf.d/
/usr/bin/chmod 650 /etc/opt/uit-toolbox/server/conf.d/* -R


find /srv/nfs/ -type d -exec chmod 755 {} \;
/usr/bin/chown nobody:nogroup /srv/nfs/uit-toolbox/images -R

/usr/bin/chown root:uit /etc/opt/uit-toolbox -R
find /etc/opt/uit-toolbox -type d -exec chmod 770 {} \;
find /etc/opt/uit-toolbox -type f -exec chmod 660 {} \;

/usr/bin/chown root:uit /opt/uit-toolbox/sql-backups -R
find /opt/uit-toolbox/sql-backups -type d -exec chmod 770 {} \;
find /opt/uit-toolbox/sql-backups -type f -exec chmod 660 {} \;

/usr/bin/chown root:uit /opt/uit-toolbox/api -R
find /opt/uit-toolbox/api -type d -exec chmod 770 {} \;
find /opt/uit-toolbox/api -type f -exec chmod 660 {} \;

if [[ ! -d /var/www/html/uit-web/transcode ]]; then
  mkdir /var/www/html/uit-web/transcode
fi
/usr/bin/chown www-data:uit /var/www/html/uit-web -R
find /var/www/html/uit-web -type d -exec chmod 775 {} \;
find /var/www/html/uit-web -type f -exec chmod 664 {} \;
chown www-data:uit /var/www/html/uit-web/bash/uit-print-pdf
chmod 770 /var/www/html/uit-web/bash/uit-print-pdf
chown www-data:uit /var/www/html/uit-web/bash/convert-to-mp4
chmod 770 /var/www/html/uit-web/bash/convert-to-mp4

/usr/bin/chown root:uit /srv/uit-toolbox/client/src -R
/usr/bin/chown root:uit /srv/uit-toolbox/client/pkg -R
# Find command w/ directory is different regex
find /srv/uit-toolbox/ -type d -not -path "*/iso*" -exec chmod 755 {} \;
find /srv/uit-toolbox/ -type f -not -path "*/iso/*" -exec chmod 664 {} \;
echo -e "\n" >> /etc/cron.d/uit-cron


# Build client .deb package
(cd /srv/uit-toolbox/client/src/
chmod 755 /srv/uit-toolbox/client/src/uit-toolbox-client_2.0-1_amd64/DEBIAN/
chmod 755 /srv/uit-toolbox/client/src/uit-toolbox-client_2.0-1_amd64/DEBIAN/control
chmod 755 /srv/uit-toolbox/client/src/uit-toolbox-client_2.0-1_amd64/DEBIAN/postinst
dpkg-deb --build --root-owner-group /srv/uit-toolbox/client/src/uit-toolbox-client_2.0-1_amd64 
mv -v /srv/uit-toolbox/client/src/uit-toolbox-client_2.0-1_amd64.deb /srv/uit-toolbox/client/pkg/uit-toolbox-client.deb 
)

if [[ ! -f /var/www/html/uit-web/favicon.ico ]]; then
    wget 'https://uh.edu/favicon.ico' --output-document /var/www/html/uit-web/favicon.ico
fi

if [[ ! -f  /var/www/html/uit-web/images/uh-logo.png ]]; then
    wget 'http://www.sa.uh.edu/brand/_img/uh-wide-full-color-rgb.png' --output-document=/var/www/html/uit-web/images/uh-logo.png
fi

if [[ -d /home/cameron/laptop-picture ]]; then
  rsync -Pav --delete /home/cameron/laptop-pictures/ /var/www/html/uit-web/images/
fi

if [[ -d /srv/uit-toolbox/client/certs ]]; then
    rm /srv/uit-toolbox/client/certs/*
  else
    mkdir -p /srv/uit-toolbox/client/certs/
fi

if [[ ! -f /usr/local/share/ca-certificates/uit-ca.crt ]]; then
    uit-update-certs --update-ca
  elif [[ ! -f /usr/local/share/ca-certificates/uit-web.crt ]]; then
    uit-update-certs
fi

cp /usr/local/share/ca-certificates/uit-ca.crt /srv/uit-toolbox/client/certs/uit-ca.crt
cp /usr/local/share/ca-certificates/uit-web.crt /srv/uit-toolbox/client/certs/uit-web.crt

# Restart Nginx to reload certs
systemctl restart nginx