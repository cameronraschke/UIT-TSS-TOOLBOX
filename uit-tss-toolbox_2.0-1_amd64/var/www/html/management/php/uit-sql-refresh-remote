<?php
# Connect to database and include custom functions
//include('/var/lib/UIT-TSS-TOOLBOX/include.php');


$db = new db();

$db->select("SELECT tagnumber FROM jobstats WHERE time IN (SELECT MAX(time) FROM jobstats WHERE tagnumber IS NOT NULL GROUP BY tagnumber) AND department IS NOT NULL GROUP BY tagnumber");
foreach ($db->get() as $key => $value) {
    # If tagnumber does not exist in the remote table, insert it.
    $db->select("SELECT tagnumber FROM remote WHERE tagnumber = '" . $value["tagnumber"] . "'");
    if (is_array($db->get()) === FALSE) {
        $db->insertRemote($value["tagnumber"]);
    }

    // Update presence
    $db->select("SELECT present FROM remote WHERE tagnumber = '" . $value["tagnumber"] . "'");
    if (arrFilter($db->get()) === 0) {
        foreach ($db->get() as $key => $value1) {
            if (strFilter($value1["present"]) === 0) {
                $time1 = NULL;
                $time1 = new DateTime($value1["present"]);
                $time1->modify('+45 second');
                $time1 = $time1->format('Y-m-d H:i:s');
                $tmpTime = $dt->format('Y-m-d H:i:s');
                if ($tmpTime < $time1) {
                    $db->updateRemote($value["tagnumber"], "present_bool", 1);
                } else {
                    $db->updateRemote($value["tagnumber"], "present_bool", 0);
                }
            }
        }
    }
    unset($value1);
    unset($time1);
    unset($tmpTime);


    # Update the time of the last job.
    $db->select("SELECT task FROM remote WHERE tagnumber = '" . $value["tagnumber"] . "' AND present_bool = '1'");
    if (arrFilter($db->get()) === 0) {
        foreach ($db->get() as $key => $value1) {
            if (strFilter($value1["task"]) === 0) {
                $db->select("SELECT time FROM jobstats WHERE tagnumber = '" . $value["tagnumber"] . "' AND (erase_completed = 1 OR clone_completed = 1) AND host_connected = 1 ORDER BY time DESC LIMIT 1");
                if (arrFilter($db->get()) === 0) {
                foreach ($db->get() as $key => $value2) {
                    $date2 = NULL;
                    $date2 = new DateTime($value2["time"]);
                    $db->updateRemote($value["tagnumber"], "last_job_time", $value2["time"]);
                    $date2->modify('+1 week');
                    $date2 = $date2->format('Y-m-d');
                    if ($date >= $date2) {
                        $db->updateRemote($value["tagnumber"], "task", "data collection");
                    }
                }
            }
            }
        }
    }
    unset($value1);
    unset($value2);
    unset($date2);


    $db->select("SELECT disk_temp FROM remote WHERE tagnumber = '" . $value["tagnumber"] . "' AND present_bool = '1'");
    if (arrFilter($db->get()) === 0) {
        foreach ($db->get() as $key => $value1) {
            if ($value1["disk_temp"] >= "82") {
                $db->updateRemote($value["tagnumber"], "status", "fail - high disk temp");
                $db->updateRemote($value["tagnumber"], "task", "shutdown");
            }
        }
    }
    unset($value1);

    $db->select("SELECT erase_completed, clone_completed FROM jobstats WHERE tagnumber = '" . $value["tagnumber"] . "' AND (erase_completed = '1' OR clone_completed = '1') ORDER BY time DESC LIMIT 1");
    if (arrFilter($db->get()) === 0) {
        foreach ($db->get() as $key => $value1) {
            if ($value1["erase_completed"] === 1 && $value1["clone_completed"] === 1) {
                $osInstalled = 1;
            } elseif ($value1["erase_completed"] === 1 && $value1["clone_completed"] !== 1) {
                $osInstalled = 0;
            } elseif ($value1["erase_completed"] !== 1 && $value1["clone_completed"] === 1) {
                $osInstalled = 1;
            } else {
                $osInstalled = 0;
            }
    
            $db->updateRemote($value["tagnumber"], "os_installed", $osInstalled);
        }
    }
    unset($value1);
}

?>