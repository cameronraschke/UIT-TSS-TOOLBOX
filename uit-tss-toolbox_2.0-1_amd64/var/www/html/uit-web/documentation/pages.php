<?php
require('/var/www/html/uit-web/header.php');
require('/var/www/html/uit-web/php/include.php');

session_start();
if ($_SESSION['authorized'] != "yes") {
  die();
}

$db = new db();
?>

<html>
  <head>
    <meta charset='UTF-8'>
    <link rel='stylesheet' type='text/css' href='/css/main.css' />
    <title>Locations - UIT Client Mgmt</title>
    <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico" />
  </head>
  <body>
    <?php include('/var/www/html/uit-web/php/navigation-bar.php'); ?>

    <div class='documentation'>
      <?php
        if ($_GET["page"] == "locations") {
          echo "<p>
            The page <a href='/locations.php'>locations.php</a> allows you to update multiple aspects of a client. 
            On the left side of the webpage, you will see a box to enter a tag number. 
            Once you enter the tag number, you will be able to modify information about the client. 
            For new clients that have never been entered into the database, there will be no information filled out. This means that you must at least fill out the tag number, serial number, and location. 
            Additionally, for existing clients, the pre-filled information provided will be based off of the most recent information the database has on the client.
            </p>
            <p>
            For checkouts, the form will pre-fill the last known customer name and checkout date if the client has not been returned. 
            A returned client is one that has a <i>Return Date</i> that is earlier or equal to the current date.
            </p>";
          echo "</br>";
          echo "<h3>Advanced Filtering</h3>";
          echo "<p>
            The filtering form on the right side of the page allows you to creat advanced searches that look through every client in the database. 
            You can select multiple values to create advanced filters and the form will tell you how many clients your filter returned. 
            For a given filter in a dropdown menu, then number in parentheses denotes how many clients have that aspect. For example, look at the following:
          </p>";
          echo "<div class='location-form'><select><option>Tech Commons (82)</option><option>SHRL (33)</option></select></div>";
          echo "<p>
            This dropdown menu would denote that 82 clients are in the Tech Commons department and 33 clients are in SHRL.
          </p>";
        }

        if ($_GET["page"] == "supported-emojis") {
          echo"
          <div class='row'>
            <div class='column'>
              <div class='styled-table' style='margin: 4% 1% 1% 7%;'>
                <table>
                  <thead>
                    <tr>
                      <th>Keyword</th>
                      <th>Replacement</th>
                    </tr>
                  </thead>
                  <tbody>";
                  $db->select("SELECT IF (NOT SUBSTR(keyword, 1, 1) IN (':', ';'), CONCAT(':', keyword), keyword) AS 'keyword_formatted', replacement FROM static_emojis ORDER BY keyword ASC");
                  foreach($db->get() as $key => $value) {
                    echo "<tr><td>" . htmlspecialchars($value["keyword_formatted"]) . "</td><td>" . htmlspecialchars($value["replacement"]) . "</td></tr>";
                  }
                  echo "
                  </tbody>
                </table>
              </div>
            </div>
          </div>";
        }

        if ($_GET["page"] == "kernel-update") {
          echo "
            <h3>Error - Kernel out of Date</h3>
            <p>The <i>Kernel Out of Date</i> error means that the running kernel on the client is not at the same version as the one in the client's filesystem. This can usually happen after updating the ISO file on the server.</p>
            <p>The clients get their running kernel from the USB sticks at boot time. Unfortunately, there is no easy way to update the kernel without rebooting the entire system.</p>
            <p>The ISO file on the server can be regenerated by running the command <code>sudo uit-iso-configure</code>. This command will regenerate the ISO file that is given to the clients when they start up. The kernel is stored on the USB sticks and the filesystem for the clients is hosted on the server. When a client is booted, the client retrieves both the kernel from the USB stick and the filesystem from the network.</p>
            <p>If the ISO file on the server (which includes the kernel and the filesystem) is updated using <code>sudo uit-iso-configure</code>, then there is a decent chance that the kernel version has changed to a newer version. NFS and many other services require modules from the kernel to function correctly. When the kernel is updated, various services will try to activate kernel modules in the old version of the kernel, which is no longer in the filesystem.</p>
            <p>To fix this error, please shutdown the client and reboot it with a USB stick with an updated kernel. To make sure the USB stick has the updated kernel, please first update the ISO file using <code>sudo uit-iso-configure</code>, then plug in the USB drive and run the <code>sudo uit-iso-flash</code> command to flash the ISO file to the thumb drive.</p>
          ";
        }
        ?>
    </div>

    <script>
      <?php
        $db->select("SELECT t1.tagnumber FROM (SELECT time, tagnumber, ROW_NUMBER() OVER (PARTITION BY tagnumber ORDER BY time DESC) AS row_nums FROM locations) t1 WHERE t1.row_nums = 1 ORDER BY t1.time DESC");
        if (arrFilter($db->get()) === 0) {
          foreach ($db->get() as $key => $value) {
            $tagStr .= $value["tagnumber"] . "|";
          }
        }
        unset($value);
      ?>

    autoFillTags(<?php echo "'" . substr($tagStr, 0, -1) . "'"; ?>);
    </script>

    <div class="uit-footer">
      <img src="/images/uh-footer.svg">
    </div>
  </body>
</html>