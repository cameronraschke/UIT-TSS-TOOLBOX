#!/usr/bin/php
<?php
/* "uit-sql-refresh-server" uses PHP to refresh the serverstats table in the mysql database. The
serverstats table is an aggregation of the clientstats table's statistics and also pulls some data
from the jobstats table. serverstats is a historical table. This script iterates through every date
starting at 2023-01-09 (our first database entry) until the current date and updates all of the entries
accordingly. TBW, boot_time, and battry_health are not historical, meaning they only update when the 
script runs and cannot update retroactively if, for example, the serverstats table were to be lost.*/
include('/var/lib/UIT-TSS-TOOLBOX/PDO-connect');
include('/var/lib/UIT-TSS-TOOLBOX/functions');

echo "Updating serverstats" . PHP_EOL;

$dt = new DateTimeImmutable();
$date = $dt->format('Y-m-d');
$time = $dt->format('Y-m-d H:i:s.v');

# If the current date does not exist in the DB, then create an entry for the current date with mostly NULL values.
$sql = "SELECT date FROM serverstats WHERE date = '$date'";
$results = $pdo->query($sql);
$linecount = $results->fetchColumn();
if ($linecount == "0") {
        echo "Inserting new serverstats entry for $date." . "\n";
        $sql = "INSERT INTO serverstats(date,time) VALUES ('$date','$time')";
        $pdo->query($sql);
}

# Select all the dates from the serverstats table and iterate through them.
$arr = array();
$sql = "SELECT date FROM serverstats";
foreach ($pdo->query($sql) as $row) {
    $start = hrtime(true);
    $sqlDate = $row['date'];

    /* Update time, which is a datetime stamp. This helps us see the time when the serverstats 
    table was last updated, not just the date. */
    $sql = "UPDATE serverstats SET time = '$time' WHERE date = '$date'";
    $pdo->query($sql);

    /* Update laptop count. A laptop counts as a distinct tagnumber in jobstats.*/
    $sql = "SELECT COUNT(DISTINCT tagnumber) FROM jobstats WHERE (date BETWEEN '2023-01-01' AND '$sqlDate') AND uuid LIKE 'techComm-%'";
    $results = $pdo->query($sql);
    $value = $results->fetchColumn();
    if ($value > 0) {
        $sql = "UPDATE serverstats SET laptop_count = '$value' WHERE date = '$sqlDate'";
        $pdo->query($sql);
    } else {
        $sql = "UPDATE serverstats SET laptop_count = NULL WHERE date = '$sqlDate'";
        $pdo->query($sql);
    }
    $arr = array();


    # Update clone_avgtime
    $sql = "SELECT clone_time FROM jobstats WHERE clone_completed = 'Yes' AND (date BETWEEN '2023-01-09' AND '$sqlDate')";
    $sth = $pdo->prepare($sql);
    $sth->execute();
    $arr = $sth->fetchAll(PDO::FETCH_COLUMN);
    $cloneJobsLC = count($arr);
    $sum = array_sum($arr);
    if ($cloneJobsLC > 0) {
        $cloneAvgTime = round(($sum / $cloneJobsLC) / 60, 0);
        $sql = "UPDATE serverstats SET clone_avgtime = '$cloneAvgTime' WHERE date = '$sqlDate'";
        $pdo->query($sql);
    } else {
        $sql = "UPDATE serverstats SET clone_avgtime = NULL WHERE date = '$sqlDate'";
        $pdo->query($sql);
    }
    $arr = array();


    # Update nvme_erase_avgtime
    $sql = "SELECT erase_time FROM jobstats WHERE erase_completed = 'yes' AND disk LIKE 'nvme%' AND (date BETWEEN '2023-01-09' AND '$sqlDate')";
    $sth = $pdo->prepare($sql);
    $sth->execute();
    $arr = $sth->fetchAll(PDO::FETCH_COLUMN);
    $nvmeEraseLC = count($arr);
    $nvmeEraseSum = array_sum($arr);
    if ($nvmeEraseLC > 0) {
        $nvmeEraseAvgTime = round(($nvmeEraseSum / $nvmeEraseLC) / 60, 0);
        $sql = "UPDATE serverstats SET nvme_erase_avgtime = '$nvmeEraseAvgTime' WHERE date = '$sqlDate'";
    } else {
        $sql = "UPDATE serverstats SET nvme_erase_avgtime = NULL WHERE date = '$sqlDate'";
        
    }
    $pdo->query($sql);
    $arr = array();



    # Update sata_erase_avgtime
    $sql = "SELECT erase_time FROM jobstats WHERE erase_completed = 'yes' AND disk LIKE 'sd%' AND (date BETWEEN '2023-01-09' AND '$sqlDate')";
    $sth = $pdo->prepare($sql);
    $sth->execute();
    $arr = $sth->fetchAll(PDO::FETCH_COLUMN);
    $ssdEraseLC = count($arr);
    $ssdEraseSum = array_sum($arr);
    if ($ssdEraseLC > 0) {
        $ssdEraseAvgTime = round(($ssdEraseSum / $ssdEraseLC) / 60, 0);
        $sql = "UPDATE serverstats SET sata_erase_avgtime = '$ssdEraseAvgTime' WHERE date = '$sqlDate'";
    } else {
        $sql = "UPDATE serverstats SET sata_erase_avgtime = NULL WHERE date = '$sqlDate'";
    }
    $pdo->query($sql);
    $arr = array();



    # Update all_avgtime
    $sql = "SELECT COUNT(tagnumber) FROM jobstats WHERE clone_completed = 'Yes' AND erase_completed = 'Yes' AND (date BETWEEN '2023-01-09' AND '$sqlDate')";
    $results = $pdo->query($sql);
    $linecount = $results->fetchColumn();
    $sql = "SELECT SUM(clone_time + erase_time) FROM jobstats WHERE clone_completed = 'Yes' AND erase_completed = 'Yes' AND (date BETWEEN '2023-01-09' AND '$sqlDate')";
    $results = $pdo->query($sql);
    $value = $results->fetchColumn();
    if ($linecount > 0) {
        $allAvgTime = round(($value / $linecount) / 60, 0);
        $sql = "UPDATE serverstats SET all_avgtime = '$allAvgTime' WHERE date = '$sqlDate'";
    }
    $pdo->query($sql);



    # Update erase_jobs
    $eraseJobsLC = $ssdEraseLC + $nvmeEraseLC;
    $sql = "UPDATE serverstats SET erase_jobs = '$eraseJobsLC' WHERE date = '$sqlDate'";
    $pdo->query($sql);



    # Update clone_jobs
    $sql = "UPDATE serverstats SET clone_jobs = '$cloneJobsLC' WHERE date = '$sqlDate'";
    $pdo->query($sql);



    # Update all_jobs
    $allJobsLineCount = $eraseJobsLC + $cloneJobsLC;
    $sql = "UPDATE serverstats SET all_jobs = '$allJobsLineCount' WHERE date = '$sqlDate'";
    $pdo->query($sql);



    # Update last_image_update
    $sql = "SELECT date FROM jobstats WHERE clone_master = 'Yes' AND (date BETWEEN '2023-01-09' AND '$sqlDate') ORDER BY time DESC LIMIT 1";
    $results = $pdo->query($sql);
    $value = $results->fetchColumn();
    if (filter($value) == 0) {
        $sql = "UPDATE serverstats SET last_image_update = '$value' WHERE date = '$sqlDate'";
    } else {
        $sql = "UPDATE serverstats SET last_image_update = NULL WHERE date = '$sqlDate'";
    }
    $pdo->query($sql);



    #Terabyte Written (Disk wear) Percent Overall
    $arr = array();
    $sql = "SELECT disk_writes FROM jobstats WHERE disk_model = 'SSDPEMKF256G8 NVMe INTEL 256GB' AND (date BETWEEN '2023-01-09' AND '$sqlDate')";
    $sth = $pdo->prepare($sql);
    $sth->execute();
    $arr = $sth->fetchAll(PDO::FETCH_COLUMN);
    $sum = array_sum($arr);
    $linecount = count($arr);
    if ($linecount > 0) {
        $avg1 = $sum / ($linecount * 72);
    } else {
        $avg1 = 0;
    }
    $arr = array();

    $sql = "SELECT disk_writes FROM jobstats WHERE disk_model = 'MTFDHBA256TCK-1AS1AABHA' AND (date BETWEEN '2023-01-09' AND '$sqlDate')";
    $sth = $pdo->prepare($sql);
    $sth->execute();
    $arr = $sth->fetchAll(PDO::FETCH_COLUMN);
    $sum = array_sum($arr);
    $linecount = count($arr);
    if ($linecount > 0) {
        $avg2 = $sum / ($linecount * 75);
    } else {
        $avg2 = 0;
    }
    $arr = array();

    $sql = "SELECT disk_writes FROM jobstats WHERE disk_model = 'LITEON CV8-8E128-11 SATA 128GB' AND (date BETWEEN '2023-01-09' AND '$sqlDate')";
    $sth = $pdo->prepare($sql);
    $sth->execute();
    $arr = $sth->fetchAll(PDO::FETCH_COLUMN);
    $sum = array_sum($arr);
    $linecount = count($arr);
    if ($linecount > 0) {
        $avg3 = $sum / ($linecount * 75);
    } else {
        $avg3 = 0;
    }
    $arr = array();

    $sql = "SELECT disk_writes FROM jobstats WHERE disk_model = 'WDC PC SN520 SDAPNUW-256G-1006' AND (date BETWEEN '2023-01-09' AND '$sqlDate')";
    $sth = $pdo->prepare($sql);
    $sth->execute();
    $arr = $sth->fetchAll(PDO::FETCH_COLUMN);
    $sum = array_sum($arr);
    $linecount = count($arr);
    if ($linecount > 0) {
        $avg4 = $sum / ($linecount * 100);
    } else {
        $avg4 = 0;
    }
    $arr = array();

    #55 TBW/R ST500LM034-2GH17A
    $sql = "SELECT disk_writes FROM jobstats WHERE disk_model = 'ST500LM034-2GH17A' AND (date BETWEEN '2023-01-09' AND '$sqlDate')";
    $sth = $pdo->prepare($sql);
    $sth->execute();
    $arr = $sth->fetchAll(PDO::FETCH_COLUMN);
    $diskWritesSum = array_sum($arr);
    $diskWritesLC = count($arr);
    $arr = array();
    echo "Disk Writes Sum ".$diskWritesSum . PHP_EOL;
    echo "Disk Writes LC ".$diskWritesSum . PHP_EOL;
    $sql = "SELECT disk_reads FROM jobstats WHERE disk_model = 'ST500LM034-2GH17A' AND (date BETWEEN '2023-01-09' AND '$sqlDate')";
    $sth = $pdo->prepare($sql);
    $sth->execute();
    $arr = $sth->fetchAll(PDO::FETCH_COLUMN);
    $diskReadsSum = array_sum($arr);
    $diskReadsLC = count($arr);
    echo "Disk Reads Sum ".$diskWritesSum . PHP_EOL;
    echo "Disk Reads LC ".$diskWritesSum . PHP_EOL;
    if ($diskWritesLC > 0 || $diskReadsLC > 0) {
        $avg5 = (($diskWritesSum + $diskReadsSum) / (($diskWritesLC + $diskReadsLC) * 55));
    } else {
        $avg5 = 0;
    }

    #100 TBW/R TOSHIBA MQ01ACF050
    $sql = "SELECT SUM(disk_writes + disk_reads) / (COUNT(disk_writes) * 100) FROM jobstats WHERE disk_model = 'TOSHIBA MQ01ACF050' AND (date BETWEEN '2023-01-09' AND '$sqlDate')";
    $results = $pdo->query($sql);
    $avg6 = $results->fetchColumn();

    $avg = ($avg1 + $avg2 + $avg3 + $avg4 + $avg5 + $avg6) / 6;

    if (filter($avg) == 0 && $avg > 0) {
        $value = ($avg * 100);
        $sql = "UPDATE serverstats SET tbw_pcnt = '$value' WHERE date = '$sqlDate'";
    } else {
        $sql = "UPDATE serverstats SET tbw_pcnt = NULL WHERE date = '$sqlDate'";
    }
    $pdo->query($sql);
    $arr = array();



    #Update boot_time
    $sql = "SELECT boot_time FROM jobstats WHERE boot_time IS NOT NULL AND (date BETWEEN '2023-01-09' AND '$sqlDate')";
    $sth = $pdo->prepare($sql);
    $sth->execute();
    $arr = $sth->fetchAll(PDO::FETCH_COLUMN);
    $sum = array_sum($arr);
    $linecount = count($arr);
    if ($sum > 0 && $linecount > 0) {
        $value = round($sum / $linecount, 0);
        $sql = "UPDATE serverstats SET boot_time = '$value' WHERE date = '$sqlDate'";
    } else {
        $sql = "UPDATE serverstats SET boot_time = NULL WHERE date = '$sqlDate'";
    }
    $pdo->query($sql);
    $arr = array();



    #Update battery_health
    $sql = "SELECT battery_health FROM jobstats WHERE battery_health IS NOT NULL AND (date BETWEEN '2023-01-09' AND '$sqlDate')";
    $sth = $pdo->prepare($sql);
    $sth->execute();
    $arr = $sth->fetchAll(PDO::FETCH_COLUMN);
    $sum = array_sum($arr);
    $linecount = count($arr);
    if ($sum > 0 && $linecount > 0) {
        $value = round($sum / $linecount, 0);
        $sql = "UPDATE serverstats SET battery_health = '$value' WHERE date = '$sqlDate'";
    } else {
        $sql = "UPDATE serverstats SET battery_health = NULL WHERE date = '$sqlDate'";
    }
    $pdo->query($sql);
    $arr = array();


    $end = hrtime(true);
    $executionTime = round(($end - $start) / 1e9, 4);
    echo "Updating serverstats for $sqlDate: " . $executionTime . " seconds" . PHP_EOL;
}

# Close the connection
$pdo = null;
?>
