#!/usr/bin/php
<?php
/* "uit-sql-refresh-server" uses PHP to refresh the serverstats table in the mysql database. The
serverstats table is an aggregation of the clientstats table's statistics and also pulls some data
from the jobstats table. serverstats is a historical table. This script iterates through every date
starting at 2023-01-09 (our first database entry) until the current date and updates all of the entries
accordingly. TBW, boot_time, and battry_health are not historical, meaning they only update when the 
script runs and cannot update retroactively if, for example, the serverstats table were to be lost.*/
include('/var/lib/UIT-TSS-TOOLBOX/PDO-connect');

echo "Updating serverstats" . PHP_EOL;

$dt = new DateTimeImmutable();
$date = $dt->format('Y-m-d');
$time = $dt->format('Y-m-d H:i:s.v');

# If the current date does not exist in the DB, then create an entry for the current date with mostly NULL values.
$sql = "SELECT COUNT(date) FROM serverstats WHERE date = '$date'";
$results = $pdo->query($sql);
$count = $results->fetchColumn();
if ($count == "0") {
		echo "Inserting new serverstats entry for $date." . "\n";
		$sql = "INSERT INTO serverstats(date,time,laptop_count,last_image_update,all_jobs,clone_jobs,erase_jobs,";
		$sql .= "all_avgtime,clone_avgtime,nvme_erase_avgtime,ssd_erase_avgtime,tbw_pcnt,battery_health,boot_time) VALUES ('$date','$time',";
		$sql .= "NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL)";
		$pdo->query($sql);
}


# Select all the dates from the serverstats table and iterate through them.
$sql = "SELECT date FROM serverstats";
foreach ($pdo->query($sql) as $row) {
	$start = hrtime(true);
	$sqldate = $row['date'];

	/* Update time, which is a datetime stamp. This helps us see the time when the serverstats 
	table was last updated, not just the date. */
	$sql = "UPDATE serverstats SET time = '$time' WHERE date = '$date'";
	$pdo->query($sql);

	/* Update laptop count. A laptop counts as a distinct tagnumber in jobstats.*/
	$sql = "SELECT COUNT(DISTINCT tagnumber) FROM jobstats WHERE NOT tagnumber = '000000' AND NOT tagnumber = '111111' AND (date BETWEEN '2023-01-01' AND '$sqldate') AND uuid LIKE 'techComm-%'";
	$results = $pdo->query($sql);
	$linecount = $results->fetchColumn();
	$sql = "UPDATE serverstats SET laptop_count = '$linecount' WHERE date = '$sqldate'";
	$pdo->query($sql);

	# Update clone_avgtime
	$sql = "SELECT COUNT(clone_time) FROM jobstats WHERE NOT tagnumber = '000000' AND NOT tagnumber = '111111' AND clone_completed = 'Yes' AND (date BETWEEN '2023-01-09' AND '$sqldate') AND uuid LIKE 'techComm-%'";
	$results = $pdo->query($sql);
	$linecount = $results->fetchColumn();
	$sql = "SELECT SUM(clone_time) as clone_avgtime FROM jobstats WHERE NOT tagnumber = '000000' AND NOT tagnumber = '111111' AND clone_completed = 'Yes' AND (date BETWEEN '2023-01-09' AND '$sqldate') AND uuid LIKE 'techComm-%'";
	foreach ($pdo->query($sql) as $row) {
		$sum = $row['clone_avgtime'];
		$sql = "UPDATE serverstats SET clone_avgtime = ROUND('$sum' / '$linecount' / 60, 0) WHERE date = '$sqldate'";
		$pdo->query($sql);
	}

	# Update nvme_erase_avgtime
	$sql = "SELECT COUNT(tagnumber) FROM jobstats WHERE NOT tagnumber = '000000' AND NOT tagnumber = '111111' AND erase_completed = 'yes' AND disk LIKE 'nvme%' AND (date BETWEEN '2023-01-09' AND '$sqldate') AND uuid LIKE 'techComm-%'";
	$results = $pdo->query($sql);
	$linecount = $results->fetchColumn();
	$sql = "SELECT SUM(erase_time) as nvme_erase_avgtime FROM jobstats WHERE NOT tagnumber = '000000' AND NOT tagnumber = '111111' AND erase_completed = 'yes' AND disk LIKE 'nvme%' AND (date BETWEEN '2023-01-09' AND '$sqldate') AND uuid LIKE 'techComm-%'";
	foreach ($pdo->query($sql) as $row) {
		$sum = $row['nvme_erase_avgtime'];
		$sql = "UPDATE serverstats SET nvme_erase_avgtime = ROUND('$sum' / '$linecount' / 60, 0) WHERE date = '$sqldate'";
		$pdo->query($sql);
	}

	# Update ssd_erase_avgtime
	$sql = "SELECT COUNT(tagnumber) FROM jobstats WHERE NOT tagnumber = '000000' AND NOT tagnumber = '111111' AND erase_completed = 'yes' AND disk LIKE 'sd%' AND (date BETWEEN '2023-01-09' AND '$sqldate') AND uuid LIKE 'techComm-%'";
	$results = $pdo->query($sql);
	$linecount = $results->fetchColumn();
	$sql = "SELECT SUM(erase_time) as ssd_erase_avgtime FROM jobstats WHERE NOT tagnumber = '000000' AND NOT tagnumber = '111111' AND erase_completed = 'yes' AND disk LIKE 'sd%' AND (date BETWEEN '2023-01-09' AND '$sqldate') AND uuid LIKE 'techComm-%'";
	foreach ($pdo->query($sql) as $row) {
		$sum = $row['ssd_erase_avgtime'];
		if ($linecount != 0) {
			$sql = "UPDATE serverstats SET ssd_erase_avgtime = ROUND('$sum' / '$linecount' / 60, 0) WHERE date = '$sqldate'";
		} else {
			$sql = "UPDATE serverstats SET ssd_erase_avgtime = NULL WHERE date = '$sqldate'";
		}
		$pdo->query($sql);
	}

	# Update all_avgtime
	$sql = "SELECT COUNT(tagnumber) FROM jobstats WHERE NOT tagnumber = '000000' AND NOT tagnumber = '111111' AND clone_completed = 'Yes' AND erase_completed = 'Yes' AND (date BETWEEN '2023-01-09' AND '$sqldate') AND uuid LIKE 'techComm-%'";
	$results = $pdo->query($sql);
	$linecount = $results->fetchColumn();
	$sql = "SELECT SUM(clone_time + erase_time) as all_avgtime FROM jobstats WHERE NOT tagnumber = '000000' AND NOT tagnumber = '111111' AND clone_completed = 'Yes' AND erase_completed = 'Yes' AND (date BETWEEN '2023-01-09' AND '$sqldate') AND uuid LIKE 'techComm-%'";
	foreach ($pdo->query($sql) as $row) {
		$sum = $row['all_avgtime'];
		$sql = "UPDATE serverstats SET all_avgtime = ROUND('$sum' / '$linecount' / 60, 0) WHERE date = '$sqldate'";
		$pdo->query($sql);
	}

	# Update erase_jobs
	$sql = "SELECT COUNT(erase_completed) AS erase_jobs FROM jobstats WHERE NOT tagnumber = '000000' AND NOT tagnumber = '111111' AND erase_completed = 'Yes' AND (date BETWEEN '2023-01-09' AND '$sqldate') AND uuid LIKE 'techComm-%'";
	$results = $pdo->query($sql);
	$eraseJobsLineCount = $results->fetchColumn();
	$sql = "UPDATE serverstats SET erase_jobs = '$eraseJobsLineCount' WHERE date = '$sqldate'";
	$pdo->query($sql);

	# Update clone_jobs
	$sql = "SELECT COUNT(clone_completed) AS clone_jobs FROM jobstats WHERE NOT tagnumber = '000000' AND NOT tagnumber = '111111' AND clone_completed = 'Yes' AND (date BETWEEN '2023-01-09' AND '$sqldate') AND uuid LIKE 'techComm-%'";
	$results = $pdo->query($sql);
	$cloneJobsLineCount = $results->fetchColumn();
	$sql = "UPDATE serverstats SET clone_jobs = '$cloneJobsLineCount' WHERE date = '$sqldate'";
	$pdo->query($sql);

	# Update all_jobs
	$allJobsLineCount = $eraseJobsLineCount + $cloneJobsLineCount;
	$sql = "UPDATE serverstats SET all_jobs = '$allJobsLineCount' WHERE date = '$sqldate'";
	$pdo->query($sql);

	# Update last_image_update
	$sql = "SELECT date FROM jobstats WHERE clone_master = 'Yes' AND (date BETWEEN '2023-01-09' AND '$sqldate') AND uuid LIKE 'techComm-%' ORDER BY time DESC LIMIT 1";
	foreach($pdo->query($sql) as $row) {
		$lastImageUpdate = $row['date'];
		$sql = "UPDATE serverstats SET last_image_update = '$lastImageUpdate' WHERE date = '$sqldate'";
		$pdo->query($sql);
	}

	#TBW
	$sql = "SELECT ROUND((100-(SUM(disk_writes)/(SUM(max_tbw)/1000))), 0) AS tbw_pcnt FROM clientstats WHERE NOT max_tbw = 'N/A' AND max_tbw IS NOT NULL";
	foreach($pdo->query($sql) as $row) {
		$pcntTBW = $row['tbw_pcnt'];
		$sql = "UPDATE serverstats SET tbw_pcnt = '$pcntTBW' WHERE date = '$date'";
		$pdo->query($sql);
	}

	#Update boot_time
	$sql = "SELECT COUNT(boot_time) FROM clientstats WHERE NOT boot_time = '0'";
	$results = $pdo->query($sql);
	$lineNums = $results->fetchColumn();

	$sql = "SELECT ROUND(SUM(boot_time), 2) as boot_time FROM clientstats WHERE NOT boot_time = '0'";
	foreach($pdo->query($sql) as $row) {
		$sumBootTime = $row['boot_time'];
		$sql = "UPDATE serverstats SET boot_time = ROUND('$sumBootTime' / '$lineNums', 0) WHERE date = '$date'";
		$pdo->query($sql);
	}

	#Update battery_health
	$sql = "SELECT COUNT(battery_health) FROM clientstats WHERE NOT battery_health = ''";
	$results = $pdo->query($sql);
	$lineNums = $results->fetchColumn();

	$sql = "SELECT ROUND(SUM(battery_health), 2) as battery_health FROM clientstats WHERE NOT battery_health = ''";
	foreach($pdo->query($sql) as $row) {
		$sum = $row['battery_health'];
		$sql = "UPDATE serverstats SET battery_health = ROUND('$sum' / '$lineNums', 0) WHERE date = '$date'";
		$pdo->query($sql);
	}

    $end = hrtime(true);
	$executionTime = round(($end - $start) / 1e9, 4);
	echo "Updating date $sqldate: " . $executionTime . " seconds" . PHP_EOL;
}

# Close the connection
$pdo = null;
?>
