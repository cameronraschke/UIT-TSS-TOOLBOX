#!/usr/bin/php
<?php
# Connect to database and include custom functions
include('/var/lib/UIT-TSS-TOOLBOX/include.php');

$timer = new scriptTimer();

echo "Updating remote table" . PHP_EOL;
$timer->start();

$db = new db();

$db->select("SELECT remote.tagnumber,
    IF(TIME_TO_SEC(TIMEDIFF(NOW(), remote.present)) < 45, 1, 0) AS 'present',
    (CASE
      WHEN static_bios_stats.bios_version = jobstats.bios_version THEN 1
      ELSE '0'
    END
    ) AS 'bios_updated',
    jobstats.time,
    remote.disk_temp
  FROM remote
  LEFT JOIN jobstats ON jobstats.tagnumber = remote.tagnumber
  INNER JOIN system_data ON system_data.tagnumber = remote.tagnumber
  INNER JOIN static_bios_stats ON static_bios_stats.system_model = system_data.system_model
  WHERE jobstats.tagnumber IS NOT NULL 
    AND jobstats.uuid LIKE 'techComm-%'
    AND jobstats.department IS NOT NULL
    AND jobstats.time IN (SELECT MAX(time) FROM jobstats WHERE tagnumber IS NOT NULL GROUP BY tagnumber)
  ORDER BY jobstats.time DESC");
foreach ($db->get() as $key => $value) {

  echo PHP_EOL;
  $timer->startMarker();

  # If tagnumber does not exist in the remote table, insert it.
  $db->Pselect("SELECT tagnumber FROM remote WHERE tagnumber = :tagnumber", array(':tagnumber' => $value["tagnumber"]));
    if (is_array($db->get()) === FALSE) {
      $db->insertRemote($value["tagnumber"]);
    }

  // Update presence
  $db->updateRemote($value["tagnumber"], "present_bool", $value["present"]);

  // Update BIOS updated status
  $db->updateRemote($value["tagnumber"], "bios_updated", $value["bios_updated"]);

  // Update Last Job Time
  $db->updateRemote($value["tagnumber"], "last_job_time", $value["time"]);

  // Disk Temp
  if ($value["disk_temp"] >= "82") {
    $db->updateRemote($value["tagnumber"], "status", "fail - high disk temp");
    $db->updateRemote($value["tagnumber"], "task", "shutdown");
  }

  // OS Installed?
  $db->Pselect("SELECT erase_completed, clone_completed FROM jobstats WHERE tagnumber = :tagnumber AND (erase_completed = '1' OR clone_completed = '1') ORDER BY time DESC LIMIT 1", array(':tagnumber' => $value["tagnumber"]));
  if (arrFilter($db->get()) === 0) {
    foreach ($db->get() as $key => $value1) {
      if ($value1["erase_completed"] === 1 && $value1["clone_completed"] === 1) {
        $osInstalled = 1;
      } elseif ($value1["erase_completed"] === 1 && $value1["clone_completed"] !== 1) {
        $osInstalled = 0;
      } elseif ($value1["erase_completed"] !== 1 && $value1["clone_completed"] === 1) {
        $osInstalled = 1;
      } else {
        $osInstalled = 0;
      }
      $db->updateRemote($value["tagnumber"], "os_installed", $osInstalled);
    }
  }
  unset($value1);

  echo "Time taken to update " . $value["tagnumber"] . ": " . $timer->endMarker() . "s" . PHP_EOL;
}

echo "(Updated) remote: " . $timer->end() . " seconds" . PHP_EOL;

?>