#!/usr/bin/php
<?php
# Connect to database and include custom functions
include('/var/lib/UIT-TSS-TOOLBOX/include.php');

$timer = new scriptTimer();

echo "Updating remote table" . PHP_EOL;
$timer->start();

$db = new db();

$db->select("SELECT tagnumber FROM jobstats WHERE time IN (SELECT MAX(time) FROM jobstats WHERE tagnumber IS NOT NULL AND department IS NOT NULL GROUP BY tagnumber) GROUP BY tagnumber");
foreach ($db->get() as $key => $value) {

    echo PHP_EOL;
    $timer->startMarker();

    # If tagnumber does not exist in the remote table, insert it.
    $db->select("SELECT tagnumber FROM remote WHERE tagnumber = '" . $value["tagnumber"] . "'");
    if (is_array($db->get()) === FALSE) {
        $db->insertRemote($value["tagnumber"]);
    }

    // Update presence
    $db->select("SELECT present FROM remote WHERE tagnumber = '" . $value["tagnumber"] . "'");
    if (arrFilter($db->get()) === 0) {
        foreach ($db->get() as $key => $value1) {
            if (strFilter($value1["present"]) === 0) {
                $timePresent = new DateTime($value1["present"]);
                $timePresent->modify('+45 second');
                $timeNow = new DateTime($time);
                if ($timeNow < $timePresent) {
                    $db->updateRemote($value["tagnumber"], "present_bool", 1);
                } else {
                    $db->updateRemote($value["tagnumber"], "present_bool", 0);
                }
            }
        }
    }
    unset($value1);
    unset($timePresent);
    unset($timeNow);


    $db->Pselect("SELECT t1.bios_version, t2.system_model FROM jobstats t1 INNER JOIN system_data t2 ON t1.tagnumber = t2.tagnumber WHERE t1.bios_version IS NOT NULL AND t2.system_model IS NOT NULL AND t1.tagnumber = :tagnumber ORDER BY t1.time DESC LIMIT 1", array(':tagnumber' => $value["tagnumber"]));
    if (arrFilter($db->get()) === 0) {
        foreach ($db->get() as $key => $value1) {

            $db->Pselect("SELECT bios_version FROM static_bios_stats WHERE system_model = :systemmodel", array(':systemmodel' => $value1["system_model"]));
            if (arrFilter($db->get()) == 0) {
                foreach ($db->get() as $key => $value2) {
                    if ($value2["bios_version"] === $value1["bios_version"]) {
                        $biosBool = 1;
                    } else {
                        $biosBool = 0;
                    }
                }
            } else { $biosBool = 0; }
        }
    } else { $biosBool = 0; }
    if (isset($biosBool)) {
        $db->updateRemote($value["tagnumber"], "bios_updated", $value["tagnumber"]);
    }
    unset($value1);
    unset($value2);
    unset($biosBool);


    # Update the time of the last job.
    $db->select("SELECT time FROM jobstats WHERE tagnumber = '" . $value["tagnumber"] . "' AND (erase_completed = 1 OR clone_completed = 1) AND host_connected = 1 ORDER BY time DESC LIMIT 1");
    if (arrFilter($db->get()) === 0) {
        foreach ($db->get() as $key => $value1) {
            $db->updateRemote($value["tagnumber"], "last_job_time", $value1["time"]);
        }
    }
    unset($value1);
    unset($date2);


    $db->select("SELECT disk_temp FROM remote WHERE tagnumber = '" . $value["tagnumber"] . "' AND present_bool = '1'");
    if (arrFilter($db->get()) === 0) {
        foreach ($db->get() as $key => $value1) {
            if ($value1["disk_temp"] >= "82") {
                $db->updateRemote($value["tagnumber"], "status", "fail - high disk temp");
                $db->updateRemote($value["tagnumber"], "task", "shutdown");
            }
        }
    }
    unset($value1);

    $db->select("SELECT erase_completed, clone_completed FROM jobstats WHERE tagnumber = '" . $value["tagnumber"] . "' AND (erase_completed = '1' OR clone_completed = '1') ORDER BY time DESC LIMIT 1");
    if (arrFilter($db->get()) === 0) {
        foreach ($db->get() as $key => $value1) {
            if ($value1["erase_completed"] === 1 && $value1["clone_completed"] === 1) {
                $osInstalled = 1;
            } elseif ($value1["erase_completed"] === 1 && $value1["clone_completed"] !== 1) {
                $osInstalled = 0;
            } elseif ($value1["erase_completed"] !== 1 && $value1["clone_completed"] === 1) {
                $osInstalled = 1;
            } else {
                $osInstalled = 0;
            }
    
            $db->updateRemote($value["tagnumber"], "os_installed", $osInstalled);
        }
    }
    unset($value1);

    echo "Time taken to update " . $value["tagnumber"] . ": " . $timer->endMarker() . "s" . PHP_EOL;
}
echo "(Updated) remote: " . $timer->end() . " seconds" . PHP_EOL;

?>