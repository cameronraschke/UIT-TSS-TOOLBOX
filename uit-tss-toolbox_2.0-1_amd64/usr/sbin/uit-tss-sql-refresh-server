#!/usr/bin/php
<?php
include('/var/lib/UIT-TSS-TOOLBOX/DB-connect-local.php');

$date = date('Y-m-d',time());
$time = date('Y-m-d H:i:s', time());

##### serverstats #####
echo "Updating serverstats" . PHP_EOL;
# Update date of report, create new report if none exist for today
$sql = "SELECT date FROM serverstats WHERE date = '$date'";
$results = $conn->query($sql);
while ($row = $results->fetch_array(MYSQLI_ASSOC)) {
	$sqldate = $row['date'];
}
	if (empty($sqldate)) {
		$sql = "INSERT INTO serverstats(date,time,laptop_count,last_image_update,all_jobs,clone_jobs,erase_jobs,";
		$sql .= "all_avgtime,clone_avgtime,nvme_erase_avgtime,ssd_erase_avgtime) VALUES ('$date','$time',";
		$sql .= "NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL)";
		$conn->query($sql);
	}

	# Update time
	$sql = "UPDATE serverstats SET time = '$time' WHERE date = '$date'";
	$conn->query($sql);


	# Update laptop count
	$sql = "SELECT tagnumber FROM clientstats WHERE NOT tagnumber = '000000'";
	$results = $conn->query($sql);
	$laptopCount = mysqli_num_rows($results);
	$sql = "UPDATE serverstats SET laptop_count = '$laptopCount' WHERE date = '$date'";
	$conn->query($sql);


	# Update clone_avgtime
	$sql = "SELECT clone_time FROM jobstats WHERE NOT tagnumber = '000000' AND NOT tagnumber = '111111' AND clone_completed = 'Yes'";
	$results = $conn->query($sql);
	$linecount = mysqli_num_rows($results);
	$sql = "SELECT SUM(clone_time) as clone_avgtime FROM jobstats WHERE NOT tagnumber = '000000' AND NOT tagnumber = '111111' AND clone_completed = 'Yes'";
	$results = $conn->query($sql);
	while ($row = $results->fetch_array(MYSQLI_ASSOC)) {
		$sum = $row['clone_avgtime'];
		$sql = "UPDATE serverstats SET nvme_erase_avgtime = '$sum' / '$linecount' WHERE date = '$date'";
		$conn->query($sql);
	}

	# Update nvme_erase_avgtime
	$sql = "SELECT erase_time FROM jobstats WHERE NOT tagnumber = '000000' AND NOT tagnumber = '111111' AND erase_completed = 'yes' AND disk LIKE 'nvme%'";
	$results = $conn->query($sql);
	$linecount = mysqli_num_rows($results);
	$sql = "SELECT ROUND(SUM(erase_time) / 60, 2) as nvme_erase_avgtime FROM jobstats WHERE NOT tagnumber = '000000' AND NOT tagnumber = '111111' AND erase_completed = 'yes' AND disk LIKE 'nvme%'";
	$results = $conn->query($sql);
	while ($row = $results->fetch_array(MYSQLI_ASSOC)) {
		$sum = $row['nvme_erase_avgtime'];
		$sql = "UPDATE serverstats SET nvme_erase_avgtime = '$sum' / '$linecount' WHERE date = '$date'";
		$conn->query($sql);
	}

	# Update ssd_erase_avgtime
	$sql = "SELECT erase_time FROM jobstats WHERE NOT tagnumber = '000000' AND NOT tagnumber = '111111' AND erase_completed = 'yes' AND disk LIKE 'sd%'";
	$results = $conn->query($sql);
	$linecount = mysqli_num_rows($results);
	$sql = "SELECT ROUND(SUM(erase_time) / 60, 2) as ssd_erase_avgtime FROM jobstats WHERE NOT tagnumber = '000000' AND NOT tagnumber = '111111' AND erase_completed = 'yes' AND disk LIKE 'sd%'";
	$results = $conn->query($sql);
	while ($row = $results->fetch_array(MYSQLI_ASSOC)) {
		$sum = $row['ssd_erase_avgtime'];
		$sql = "UPDATE serverstats SET ssd_erase_avgtime = '$sum' / '$linecount' WHERE date = '$date'";
		$conn->query($sql);
	}

	# Update erase_jobs
	$sql = "SELECT SUM(erase_jobs) AS erase_jobs FROM clientstats WHERE NOT tagnumber = '000000' AND erase_time > 1";
	$results = $conn->query($sql);
	$i = $results->fetch_all(MYSQLI_ASSOC);
	$eraseJobsLineCount = 0;
	foreach($i as $key => $value) {
		$eraseJobsLineCount = $eraseJobsLineCount + $value['erase_jobs'];
	}
	if ($eraseJobsLineCount >= 1) {
		$sql = "UPDATE serverstats SET erase_jobs = '$eraseJobsLineCount' WHERE date = '$date'";
		$conn->query($sql);
	}

	# Update clone_jobs
	$sql = "SELECT SUM(clone_jobs) AS clone_jobs FROM clientstats WHERE NOT tagnumber = '000000' AND clone_time > 1";
	$results = $conn->query($sql);
	$i = $results->fetch_all(MYSQLI_ASSOC);
	$cloneJobsLineCount = 0;
	foreach($i as $key => $value) {
		$cloneJobsLineCount = $cloneJobsLineCount + $value['clone_jobs'];
	}
	if ($cloneJobsLineCount >= 1) {
		$sql = "UPDATE serverstats SET clone_jobs = '$cloneJobsLineCount' WHERE date = '$date'";
		$conn->query($sql);
	}

	# Update all_jobs
	$allJobsLineCount = $eraseJobsLineCount + $cloneJobsLineCount;
	if ($allJobsLineCount >= 1) {
		$sql = "UPDATE serverstats SET all_jobs = '$allJobsLineCount' WHERE date = '$date'";
		$conn->query($sql);
	}

	# Update last_image_update
	$sql = "SELECT date from jobstats where clone_master = 'Yes' ORDER BY date DESC LIMIT 1";
	$results = $conn->query($sql);
	$i = $results->fetch_all(MYSQLI_ASSOC);
	foreach($i as $key => $value) {
		$lastImageUpdate = $value['date'];
	}
	if (!empty($lastImageUpdate)) {
		$sql = "UPDATE serverstats SET last_image_update = '$lastImageUpdate' WHERE date = '$date'";
		$conn->query($sql);
	}

	#TBW	
	$sql = "SELECT ROUND(SUM(disk_tbw) / SUM(max_tbw) * 100, 2) AS tbw_pcnt FROM clientstats";
	$results = $conn->query($sql);
	while ($row = $results->fetch_array(MYSQLI_ASSOC)) {
		$pcntTBW = $row['tbw_pcnt'];
		$sql = "UPDATE serverstats SET tbw_pcnt = '$pcntTBW' WHERE date = '$date'";
		$conn->query($sql);
	}

	#Update boot_time
	$sql = "SELECT boot_time FROM clientstats WHERE NOT boot_time = '0'";
	$results = $conn->query($sql);
	$lineNums = mysqli_num_rows($results);

	$sql = "SELECT ROUND(SUM(boot_time), 2) as boot_time FROM clientstats WHERE NOT boot_time = '0'";
	$results = $conn->query($sql);
	while ($row = $results->fetch_array(MYSQLI_ASSOC)) {
		$sumBootTime = $row['boot_time'];
		$sql = "UPDATE serverstats SET boot_time = ROUND($sumBootTime / $lineNums, 0) WHERE date = '$date'";
		$conn->query($sql);
	}

	#Update battery_health
	$sql = "SELECT battery_health FROM clientstats WHERE NOT battery_health = ''";
	$results = $conn->query($sql);
	$lineNums = mysqli_num_rows($results);

	$sql = "SELECT ROUND(SUM(battery_health), 2) as battery_health FROM clientstats WHERE NOT battery_health = ''";
	$results = $conn->query($sql);
	while ($row = $results->fetch_array(MYSQLI_ASSOC)) {
		$sum = $row['battery_health'];
		$sql = "UPDATE serverstats SET battery_health = ROUND($sum / $lineNums, 0) WHERE date = '$date'";
		$conn->query($sql);
	}

$conn->close();
?>