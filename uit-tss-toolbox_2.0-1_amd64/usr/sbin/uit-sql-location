#!/bin/bash

RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
BLUE=$(tput setaf 4)
BOLD=$(tput bold)
DIM=$(tput dim)
RESET=$(tput sgr0)

while true; do
    echo ""
    echo ""
    read -p "Please enter the ${BOLD}${GREEN}tagnumber${RESET}: " tagNum
    sql=$(echo "SELECT system_serial AS result FROM locations WHERE tagnumber = '${tagNum}' AND tagnumber IS NOT NULL ORDER BY time DESC LIMIT 1" | /var/lib/UIT-TSS-TOOLBOX/select)
    sqlTime=$(echo "SELECT time AS result FROM locations WHERE tagnumber = '${tagNum}' AND tagnumber IS NOT NULL ORDER BY time DESC LIMIT 1" | /var/lib/UIT-TSS-TOOLBOX/select)
    echo "The last reported serial number for ${tagNum} was: ${BOLD}${sql}${RESET} at ${BOLD}${sqlTime}${RESET}"
    if [[ $sql == "NULL" ]]; then
        read -p "Please enter the ${BOLD}${GREEN}serial number${RESET}: " serial
    else
        serial="${sql}"
    fi
    sql=$(echo "SELECT location AS result FROM locations WHERE tagnumber = '${tagNum}' ORDER BY time DESC LIMIT 1" | /var/lib/UIT-TSS-TOOLBOX/select)
    echo "The last reported location for ${tagNum} was: ${BOLD}${sql}${RESET}"
    read -p "Please enter the ${BOLD}${GREEN}location${RESET}: " location
    read -n 1 -p "Please enter the ${BOLD}${GREEN}status${RESET} ${BOLD}${GREEN}[1] ${RESET}${BOLD}Functioning ${BOLD}${GREEN}[2] ${RESET}${BOLD}Broken${RESET}: " status

    if [[ $status == "1" ]]; then
        status="functioning"
        problem=""
    elif [[ $status == "2" ]]; then
        echo ""
        sql=$(echo "SELECT problem AS result FROM locations WHERE tagnumber = '${tagNum}' ORDER BY time DESC LIMIT 1" | /var/lib/UIT-TSS-TOOLBOX/select)
        echo "The last reported issue for ${tagNum} was: ${BOLD}${sql}${RESET}"
        status="broken"
        read -p "Please enter the ${BOLD}${GREEN}problem${GREEN}${RESET}: " problem
    else
        status=""
        problem=""
    fi

    echo "location|${tagNum}|${serial}|${location}|${status}|${problem}" | /var/lib/UIT-TSS-TOOLBOX/parse
done