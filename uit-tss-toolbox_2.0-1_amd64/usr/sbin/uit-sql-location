#!/bin/bash

RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
BLUE=$(tput setaf 4)
BOLD=$(tput bold)
DIM=$(tput dim)
RESET=$(tput sgr0)

while true; do
    echo ""
    echo ""
    echo ""
    read -p "Please enter the ${BOLD}${GREEN}tagnumber${RESET}: " tagNum
    sql=$(echo "SELECT system_serial AS result FROM locations WHERE tagnumber = '${tagNum}' AND tagnumber IS NOT NULL ORDER BY time DESC LIMIT 1" | /var/lib/UIT-TSS-TOOLBOX/select)
    echo "The last reported serial number for ${BOLD}${tagNum}${RESET} was: ${BOLD}${sql}${RESET}"
    if [[ $sql == "NULL" ]]; then
        read -p "Please enter the ${BOLD}${GREEN}serial number${RESET}: " serial
    else
        serial="${sql}"
    fi
    sql=$(echo "SELECT department AS result FROM jobstats WHERE tagnumber = '${tagNum}' AND system_serial = '${serial}' AND department IS NOT NULL ORDER BY time DESC LIMIT 1" | /var/lib/UIT-TSS-TOOLBOX/select)
    if [[ $sql == "shrl" ]]; then
        echo "The last reported department for ${BOLD}${tagNum}${RESET} was: ${BOLD}${sql}${RESET}"
        department="shrl"
    elif [[ $sql == "techComm" ]]; then
        echo "The last reported department for ${BOLD}${tagNum}${RESET} was: ${BOLD}${sql}${RESET}"
        department="techComm"
    else
        echo "Please select the ${BOLD}${GREEN}department${RESET}:"
        echo "   ${BOLD}${GREEN}[1]${RESET} TechCommons"
        echo "   ${BOLD}${GREEN}[2]${RESET} SHRL"
        read -n 1 -p "${BOLD}Please enter [1,2]:${RESET} " input
        echo ""
        if [[ $input == "1" ]]; then
            department="techComm"
            elif [[ $input == "2" ]]; then
            department="shrl"
            else
            department=""
        fi
    fi
    sql=$(echo "SELECT location AS result FROM locations WHERE tagnumber = '${tagNum}' AND NOT location = 'Plugged in and booted on laptop table.' AND NOT location = 'Finished work on laptop table.' AND location IS NOT NULL ORDER BY time DESC LIMIT 1" | /var/lib/UIT-TSS-TOOLBOX/select)
    sql1=$(echo "SELECT CONVERT(time, DATETIME) AS result FROM locations WHERE tagnumber = '${tagNum}' AND NOT location = 'Plugged in and booted on laptop table.' AND NOT location = 'Finished work on laptop table.' AND location IS NOT NULL ORDER BY time DESC LIMIT 1" | /var/lib/UIT-TSS-TOOLBOX/select)
    echo "The last reported location for ${BOLD}${tagNum}${RESET} was: ${BOLD}${sql}${RESET} at ${BOLD}${sql1}${RESET}"
    read -p "Please enter the ${BOLD}${GREEN}location${RESET}: " location
    read -n 1 -p "Please enter the ${BOLD}${GREEN}status${RESET} ${BOLD}${GREEN}[1] ${RESET}${BOLD}Functioning ${BOLD}${GREEN}[2] ${RESET}${BOLD}Broken${RESET}: " status

    if [[ $status == "1" ]]; then
        echo ""
        status="TRUE"
        read -p "Please enter a ${BOLD}${GREEN}note${GREEN}${RESET} (leave blank for no note): " note
    elif [[ $status == "2" ]]; then
        echo ""
        sql=$(echo "SELECT note AS result FROM locations WHERE tagnumber = '${tagNum}' AND note IS NOT NULL ORDER BY time DESC LIMIT 1" | /var/lib/UIT-TSS-TOOLBOX/select)
        echo "The last reported issue for ${tagNum} was: ${BOLD}${sql}${RESET}"
        status="FALSE"
        read -p "Please enter the ${BOLD}${GREEN}problem${GREEN}${RESET}: " note
        echo "Is the disk removed?:"
        echo "   ${BOLD}${GREEN}[1]${RESET} Yes"
        echo "   ${BOLD}${GREEN}[2]${RESET} No"
        read -n 1 -p "${BOLD}Please enter [1,2]:${RESET} " diskRemoved
        if [[ $diskRemoved == "1" ]]; then
                diskRemoved="FALSE"
            elif [[ $diskRemoved == "2" ]]; then
                diskRemoved="TRUE"
            else
                diskRemoved=""
        fi

        echo ""
        diskModel=$(echo "SELECT disk_model AS result FROM jobstats WHERE tagnumber = '${tagNum}' AND disk_model IS NOT NULL ORDER BY time DESC LIMIT 1" | /var/lib/UIT-TSS-TOOLBOX/select)
        diskSize=$(echo "SELECT disk_size AS result FROM jobstats WHERE tagnumber = '${tagNum}' AND disk_size IS NOT NULL ORDER BY time DESC LIMIT 1" | /var/lib/UIT-TSS-TOOLBOX/select)
        diskSerial=$(echo "SELECT disk_serial AS result FROM jobstats WHERE tagnumber = '${tagNum}' AND disk_serial IS NOT NULL ORDER BY time DESC LIMIT 1" | /var/lib/UIT-TSS-TOOLBOX/select)

        if [[ $diskModel == "NULL" ]]; then
        read -p "Please enter the ${BOLD}${GREEN}disk model${RESET}: " diskModel
        fi

        if [[ $diskSize == "NULL" ]]; then
        read -p "Please enter the ${BOLD}${GREEN}disk size${RESET} in GB: " diskSize
        fi

        if [[ $diskSerial == "NULL" ]]; then
        read -p "Please enter the ${BOLD}${GREEN}disk serial number${RESET}: " diskSerial
        fi

        echo "disk|${tagNum}|${serial}|${diskModel}|${diskSize}|${diskSerial}|${department}" | /var/lib/UIT-TSS-TOOLBOX/parse
    else
        status=""
        note=""
    fi

    echo "location|${tagNum}|${serial}|${location}|${department}|${status}|${diskRemoved}|${note}" | /var/lib/UIT-TSS-TOOLBOX/parse
done