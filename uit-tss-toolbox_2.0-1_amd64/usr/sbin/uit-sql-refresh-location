#!/usr/bin/php
<?php

# Connect to database and include custom functions
include('/var/lib/UIT-TSS-TOOLBOX/mysql-functions');

# Set current date and time
$dt = new DateTimeImmutable();
$date = $dt->format('Y-m-d');
$time = $dt->format('Y-m-d H:i:s.v');

# Clear globals
clearSQLGlobals();
clearTimeGlobals();

# Start the timer
echo timeSinceLastMarker("start", "Updating locations") . PHP_EOL;

# Iterate through distinct tagnumbers from jobstats with techComm UUIDs
dbSelect("SELECT tagnumber,system_serial FROM jobstats WHERE time IN (SELECT max(time) FROM jobstats WHERE tagnumber IS NOT NULL GROUP BY tagnumber)");
foreach ($arr as $key => $value) {
    # Set $tagNum to the iterated tagnumber.
    $tagNum = $value["tagnumber"];

    # Set $serial to the iterated tagnumber.
    if (filter($value["system_serial"]) == 0) {
        $serial = $value["system_serial"];
    } else {
        $serial = NULL;
    }

    # Start the timer that counts how much time each tagnumber takes to process.
    echo PHP_EOL;
    echo timeSinceLastMarker("markerStart", "Updating $tagNum ($serial)") . PHP_EOL;

    dbSelectVal("SELECT MAX(time) AS result FROM locations WHERE tagnumber = '$tagNum'");
    $curTime = $result;

    /* Select the time of the most recent entry for a given client where the clone job has successfully completed. 
    This shows whether or not the OS is installed and at what time it was last installed. */
    $sql = "SELECT erase_completed,clone_completed FROM jobstats WHERE tagnumber = '$tagNum' AND (erase_completed = '1' OR clone_completed = '1') ORDER BY time DESC LIMIT 1";
    dbSelect($sql);
    foreach ($arr as $key => $value) {
        $eraseCompleted = $value["erase_completed"];
        $cloneCompleted = $value["clone_completed"];
        if ($eraseCompleted == '1' && $cloneCompleted == '1') {
            $osInstalled = 1;
        } elseif ($eraseCompleted == '1' && $cloneCompleted != '1') {
            $osInstalled = 0;
        } elseif ($eraseCompleted != '1' && $cloneCompleted == '1') {
            $osInstalled = 1;
        } else {
            $osInstalled = 0;
        }

        dbUpdateLocation("os_installed", "$osInstalled", "$curTime");
    }

    # End the timer and print how long it took to update the location table for a specific tagnumber.
    # End the marker timer
    echo timeSinceLastMarker("markerEnd", "Time Taken for $tagNum ($serial): ") . PHP_EOL;
}

# Stop the timer
echo timeSinceLastMarker("end", "Total Time to Update locations: ") . PHP_EOL;

# Clear globals
clearSQLGlobals();
clearTimeGlobals();

?>