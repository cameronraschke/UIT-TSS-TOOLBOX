Planned API endpoints
>>> Make sure to check data types for some values <<<

For a given request method and variable:
    * = mandatory for the request method
    ** = mandatory, and must be specified with 
            1. all other variables with the same request method
            2. all other variables denoted with **
    *** = At least one, but not all, of the denoted variables are mandatory

-- General Data --
    -server time
        - GET/POST (/api/server_time[?...])
            - POST variables:
                >client_time [POST: time, RET: boolean]*
                >null GET    [GET: null, RET: time string ISO formatted]
            -note: client_time (POST only) returns a
                boolean if client_time is within
                margin of error of the server's time
    -reverse client lookup
        - GET (/api/lookup[?...])
            - GET variables:
                >tagnumber      [GET: integer, RET: (string, integer)]***
                >system_serial  [GET: string, RET: (string, integer)]***
            -note: If GETing data, you must specify
                   tagnumber OR system_serial, not both
            -note: The API will return the tagnumber and 
                   system_serial variables


hardware data
overall disk health
    - GET (/api/hardware/disk_health[?...])
        - GET/POST variables:
            >date       [GET: date string, RET: float]*
                        [POST: date string, RET: null]**
            >percentage [POST: float, RET: err]**
    -note: If updating the percentage for a given date, the
           date and percentage BOTH have to be specified in
           the POST body request.

overall battery health
    - GET (/api/hardware/battery_health[?...])
        - GET/POST variables:
            >date       [GET: date string RET: float]*
                        [POST: date string RET: null]**
            >percentage [POST: float, RET: err]**
    -note: If updating the percentage for a given date, the
           date and percentage BOTH have to be specified in
           the POST body request.

hardware data by tag
    - GET/POST (/api/client/hardware[?...])
        - GET/POST variables: 
            >tagnumber                  [GET: integer, RET: all others]*
                                        [POST: integer, RET: err]**
            >ethernet_mac               [POST: string, RET: err]
            >wifi_mac                   [POST: string, RET: err]
            >model                      [POST: string, RET: err]
            >uuid (system UUID in DMI)  [POST: string, RET: err]
            >SKU                        [POST: string, RET: err]
            >chassis_type               [POST: string, RET: err]
            >cpu_manufacturer           [POST: string, RET: err]
            >cpu_model                  [POST: string, RET: err]
            >cpu_max_speed              [POST: float, RET: err]
            >cpu_cores                  [POST: integer, RET: err]
            >cpu_threads                [POST: integer, RET: err]
            >motherboard_manufacturer   [POST: string, RET: err]
            >motherboard_serial         [POST: string, RET: err]
            >system_manufacturer        [POST: string, RET: err]
        -note: like many other endpoints, if you GET a certain variable,
               all other variables will be returned (hence, "all others").


disk data by tag
    - GET/POST (/api/client/hardware/disk[?...])
        - GET/POST variables: 
            >tagnumber*                 [GET: integer, RET: all others]*
                                        [POST: integer, RET: err]**
            >name (in linux e.g. sda)   [POST: string, RET: err]
            >model                      [POST: string, RET: err]
            >serial                     [POST: string, RET: err]
            >firmware                   [POST: string, RET: err]
            >temp                       [POST: integer, RET: err]
            >size (capacity in GB)      [POST: integer, RET: err]
            >reads (total)              [POST: integer, RET: err]
            >writes (total)             [POST: integer, RET: err]
            >power_on_hours             [POST: integer, RET: err]
            >power_cycles               [POST: integer, RET: err]
            >type                       [POST: string, RET: err]
            >generic_error              [POST: string, RET: err]
            >data_integrity_error       [POST: string, RET: err]
            >total_error_count          [POST: integer, RET: err]
        -note: like many other endpoints, if you GET a certain variable,
            all other variables will be returned (hence, "all others").

battery data by tag
    - GET/POST (/api/client/hardware/battery[?...])
        - GET/POST variables: 
            >tagnumber*         [GET: integer, RET: all others]*
                                [POST: string, RET: err]**
            >current_charge     [POST: integer, RET: err]
            >factory_charge     [POST: integer, RET: err]
            >overall_health     [POST: float, RET: err]
            >charge_cycles      [POST: integer, RET: err]
            >model              [POST: string, RET: err]
            >capactiy           [POST: integer, RET: err]
            >serial             [POST: string, RET: err]
            >manufacturer       [POST: string, RET: err]
        -note: like many other endpoints, if you GET a certain variable,
            all other variables will be returned (hence, "all others").

RAM/memory data by tag
    - GET/POST (/api/client/hardware/memory[?...])
        - GET/POST variables: tagnumber*, serial, capacity, speed
            -note: RAM serial for 2+ sticks is concatenated 
                    into one string separated by two dashes (--)

Hardware temps
    - GET/POST (/api/client/hardware/temp)
        - GET/POST variables:
            CPU Temp (POST: float, GET: float)


software/firmware data by tag
    - GET/POST (/api/client/software[?...])
        - GET/POST variables: tagnumber*, bios_version, 
                         bios_date, bios_revision,
                         boot_time


-- Job Queue Data --
job queue and queue position data for clients
    - GET (/api/job_queue[?...])
        - GET variables: total_queued_jobs, 
                    total_active_jobs,
                    total_active_blocking_jobs
            -blocking jobs are jobs that have to be
              queued, e.g. clone jobs.
    -job active by tag
        - GET/POST (/api/client/job_queue[?...])
            - GET/POST variables: tagnumber*, queued_job, 
                             job_active, queue_position
                             
jobs available by tag
    - GET (/api/client/job_available[?...])
        - GET variables: tagnumber*, job_name
            -note: job_name returns boolean if job_name is 
                    or is not available for tag number. Tag
                    must be specified if job_name is specified.

                     

-- Job control
uuid, time, date, location, job_type, erase_mode, clone_mode, erase_time, clone_time, clone_master, image_name, image_name_formatted, 


-- Job Queue Data (server/client side) --
remote job queue data
    -online clients
        - GET (/api/job_queue/online)
    -update queued job for all online clients
        - POST (/api/job_queue/online)
    -offline clients
        - GET (/api/job_queue/offline)

job queue data by tag
    -online/offline, current status & queued job
        - GET (/api/job_queue/client?tagnumber=?formatted=)
        - GET (/api/job_queue/client?serial=?formatted=)
    -update queued job
        - POST (/api/job_queue/client?tagnumber=)
        - POST (/api/job_queue/client?serial=)

-- Checkout Data --
All checkouts
    -currently checked out
        - GET (/api/checkouts/current)
    -historical checkouts
        - GET (/api/checkouts/all-time)
    -for each client
        -currently checked out
            - GET (/api/checkouts/current?tagnumber=)
        -historical log for a given client
            - GET (/api/checkouts/all-time?tagnumber=)

/api/